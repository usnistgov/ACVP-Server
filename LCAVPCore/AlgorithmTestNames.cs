namespace LCAVPCore
{
	static public class AlgorithmTestNames
	{
		//Set of tests used by most AES variants
		public static string[] AES_Core = {  "GF Substitution Box Known Answer Test",
											"Key Substitution Box Known Answer Test",
											"Variable Key Known Answer Test",
											"Variable Text Known Answer Test",
											"Multi block Message Test",
											"Monte Carlo Test"
											};

		public static string[] AES_CBC = AES_Core;
		public static string[] AES_CFB1 = AES_Core;
		public static string[] AES_CFB128 = AES_Core;
		public static string[] AES_CFB8 = AES_Core;
		public static string[] AES_ECB = AES_Core;
		public static string[] AES_OFB = AES_Core;

		public static string[] TDES_Encrypt = { "Variable PT Known Answer Test",
												"Variable KEY Known Answer Test",
												"Inverse Permutation Known Answer Test",
												"Permutation Operation Known Answer Test",
												"Substitution Table Known Answer Test",
												"Monte Carlo Test - KO1 - Monte3",
												"Multi block Message Test - KO1 - MMT3"
												};

		//Master set of tests for TDES Decrypt
		public static string[] TDES_Decrypt = { "Variable CT Known Answer Test",
													"Variable KEY Known Answer Test",
													"Inverse Permutation Known Answer Test",
													"Permutation Operation Known Answer Test",
													"Substitution Table Known Answer Test",
													"Monte Carlo Test - KO2 - Monte2",
													"Monte Carlo Test - KO1 - Monte3",
													"Multi block Message Test - KO2 - MMT2",
													"Multi block Message Test - KO1 - MMT3"
													};

		public static string[] TDES_Decrypt_KO1 = { "Variable CT Known Answer Test",
													"Variable KEY Known Answer Test",
													"Inverse Permutation Known Answer Test",
													"Permutation Operation Known Answer Test",
													"Substitution Table Known Answer Test",
													"Monte Carlo Test - KO1 - Monte3",
													"Multi block Message Test - KO1 - MMT3"
													};

		public static string[] TDES_Decrypt_KO2 = { "Variable CT Known Answer Test",
													"Variable KEY Known Answer Test",
													"Inverse Permutation Known Answer Test",
													"Permutation Operation Known Answer Test",
													"Substitution Table Known Answer Test",
													"Monte Carlo Test - KO2 - Monte2",
													"Multi block Message Test - KO2 - MMT2"
													};

		public static string[] DRBG_Hash = {    "SHA-1:",
												"SHA-224:",
												"SHA-256:",
												"SHA-384:",
												"SHA-512:",
												"SHA-512/224:",
												"SHA-512/256:"
											};

		public static string[] DRBG_HMAC = {    "SHA-1:",
												"SHA-224:",
												"SHA-256:",
												"SHA-384:",
												"SHA-512:",
												"SHA-512/224:",
												"SHA-512/256:"
											};

		public static string[] DRBG_CTR = { "3KeyTDEA use df:",
											"AES-128 use df:",
											"AES-192 use df:",
											"AES-256 use df:",
											"3KeyTDEA no df:",
											"AES-128 no df:",
											"AES-192 no df:",
											"AES-256 no df:"
											};

		public static string[] KDF = {  "PRF=CMAC_AES128",
										"PRF=CMAC_AES192",
										"PRF=CMAC_AES256",
										"PRF=CMAC_TDES2",
										"PRF=CMAC_TDES3",
										"PRF=HMAC_SHA1",
										"PRF=HMAC_SHA224",
										"PRF=HMAC_SHA256",
										"PRF=HMAC_SHA384",
										"PRF=HMAC_SHA512"
										};

		public static string[] RSA_186_4_SigGenSigVer = {   "Mod 1024 SHA  1:",
															"Mod 1024 SHA224:",
															"Mod 1024 SHA256:",
															"Mod 1024 SHA384:",
															"Mod 1024 SHA512:",
															"Mod 1024 SHA512224:",
															"Mod 1024 SHA512256:",
															"Mod 2048 SHA  1:",
															"Mod 2048 SHA224:",
															"Mod 2048 SHA256:",
															"Mod 2048 SHA384:",
															"Mod 2048 SHA512:",
															"Mod 2048 SHA512224:",
															"Mod 2048 SHA512256:",
															"Mod 3072 SHA  1:",
															"Mod 3072 SHA224:",
															"Mod 3072 SHA256:",
															"Mod 3072 SHA384:",
															"Mod 3072 SHA512:",
															"Mod 3072 SHA512224:",
															"Mod 3072 SHA512256:",
															"Mod 4096 SHA  1:",
															"Mod 4096 SHA224:",
															"Mod 4096 SHA256:",
															"Mod 4096 SHA384:",
															"Mod 4096 SHA512:",
															"Mod 4096 SHA512224:",
															"Mod 4096 SHA512256:"
															};


		public static string[] RSA_KeyGen = {   "ProbRP Mod 2048  M-RTable C.2:",
												"ProbRP Mod 2048  M-RTable C.3:",
												"ProbRP Mod 3072  M-RTable C.2:",
												"ProbRP Mod 3072  M-RTable C.3:",
												"ProvRP Mod 2048 SHA  1:",
												"ProvRP Mod 2048 SHA224:",
												"ProvRP Mod 2048 SHA256:",
												"ProvRP Mod 2048 SHA384:",
												"ProvRP Mod 2048 SHA512:",
												"ProvRP Mod 2048 SHA512224:",
												"ProvRP Mod 2048 SHA512256:",
												"ProvRP Mod 3072 SHA  1:",
												"ProvRP Mod 3072 SHA224:",
												"ProvRP Mod 3072 SHA256:",
												"ProvRP Mod 3072 SHA384:",
												"ProvRP Mod 3072 SHA512:",
												"ProvRP Mod 3072 SHA512224:",
												"ProvRP Mod 3072 SHA512256:",
												"ProvPC Mod 1024 SHA  1:",
												"ProvPC Mod 1024 SHA224:",
												"ProvPC Mod 1024 SHA256:",
												"ProvPC Mod 1024 SHA384:",
												"ProvPC Mod 1024 SHA512:",
												"ProvPC Mod 1024 SHA512224:",
												"ProvPC Mod 1024 SHA512256:",
												"ProvPC Mod 2048 SHA  1:",
												"ProvPC Mod 2048 SHA224:",
												"ProvPC Mod 2048 SHA256:",
												"ProvPC Mod 2048 SHA384:",
												"ProvPC Mod 2048 SHA512:",
												"ProvPC Mod 2048 SHA512224:",
												"ProvPC Mod 2048 SHA512256:",
												"ProvPC Mod 3072 SHA  1:",
												"ProvPC Mod 3072 SHA224:",
												"ProvPC Mod 3072 SHA256:",
												"ProvPC Mod 3072 SHA384:",
												"ProvPC Mod 3072 SHA512:",
												"ProvPC Mod 3072 SHA512224:",
												"ProvPC Mod 3072 SHA512256:",
												"BothPC Mod 1024 SHA  1  M-RTable C.2:",
												"BothPC Mod 1024 SHA  1  M-RTable C.3:",
												"BothPC Mod 1024 SHA224  M-RTable C.2:",
												"BothPC Mod 1024 SHA224  M-RTable C.3:",
												"BothPC Mod 1024 SHA256  M-RTable C.2:",
												"BothPC Mod 1024 SHA256  M-RTable C.3:",
												"BothPC Mod 1024 SHA384  M-RTable C.2:",
												"BothPC Mod 1024 SHA384  M-RTable C.3:",
												"BothPC Mod 1024 SHA512  M-RTable C.2:",
												"BothPC Mod 1024 SHA512  M-RTable C.3:",
												"BothPC Mod 1024 SHA512224  M-RTable C.2:",
												"BothPC Mod 1024 SHA512224  M-RTable C.3:",
												"BothPC Mod 1024 SHA512256  M-RTable C.2:",
												"BothPC Mod 1024 SHA512256  M-RTable C.3:",
												"BothPC Mod 2048 SHA  1  M-RTable C.2:",
												"BothPC Mod 2048 SHA  1  M-RTable C.3:",
												"BothPC Mod 2048 SHA224  M-RTable C.2:",
												"BothPC Mod 2048 SHA224  M-RTable C.3:",
												"BothPC Mod 2048 SHA256  M-RTable C.2:",
												"BothPC Mod 2048 SHA256  M-RTable C.3:",
												"BothPC Mod 2048 SHA384  M-RTable C.2:",
												"BothPC Mod 2048 SHA384  M-RTable C.3:",
												"BothPC Mod 2048 SHA512  M-RTable C.2:",
												"BothPC Mod 2048 SHA512  M-RTable C.3:",
												"BothPC Mod 2048 SHA512224  M-RTable C.2:",
												"BothPC Mod 2048 SHA512224  M-RTable C.3:",
												"BothPC Mod 2048 SHA512256  M-RTable C.2:",
												"BothPC Mod 2048 SHA512256  M-RTable C.3:",
												"BothPC Mod 3072 SHA  1  M-RTable C.2:",
												"BothPC Mod 3072 SHA  1  M-RTable C.3:",
												"BothPC Mod 3072 SHA224  M-RTable C.2:",
												"BothPC Mod 3072 SHA224  M-RTable C.3:",
												"BothPC Mod 3072 SHA256  M-RTable C.2:",
												"BothPC Mod 3072 SHA256  M-RTable C.3:",
												"BothPC Mod 3072 SHA384  M-RTable C.2:",
												"BothPC Mod 3072 SHA384  M-RTable C.3:",
												"BothPC Mod 3072 SHA512  M-RTable C.2:",
												"BothPC Mod 3072 SHA512  M-RTable C.3:",
												"BothPC Mod 3072 SHA512224  M-RTable C.2:",
												"BothPC Mod 3072 SHA512224  M-RTable C.3:",
												"BothPC Mod 3072 SHA512256  M-RTable C.2:",
												"BothPC Mod 3072 SHA512256  M-RTable C.3:",
												"ProbPC Mod 1024  M-RTable C.2:",
												"ProbPC Mod 1024  M-RTable C.3:",
												"ProbPC Mod 2048  M-RTable C.2:",
												"ProbPC Mod 2048  M-RTable C.3:",
												"ProbPC Mod 3072  M-RTable C.2:",
												"ProbPC Mod 3072  M-RTable C.3:"
												};

		public static string[] RSA_186_2_SigVer = { "Mod 1024 SHA  1:",
													"Mod 1024 SHA224:",
													"Mod 1024 SHA256:",
													"Mod 1024 SHA384:",
													"Mod 1024 SHA512:",
													"Mod 1536 SHA  1:",
													"Mod 1536 SHA224:",
													"Mod 1536 SHA256:",
													"Mod 1536 SHA384:",
													"Mod 1536 SHA512:",
													"Mod 2048 SHA  1:",
													"Mod 2048 SHA224:",
													"Mod 2048 SHA256:",
													"Mod 2048 SHA384:",
													"Mod 2048 SHA512:",
													"Mod 3072 SHA  1:",
													"Mod 3072 SHA224:",
													"Mod 3072 SHA256:",
													"Mod 3072 SHA384:",
													"Mod 3072 SHA512:",
													"Mod 4096 SHA  1:",
													"Mod 4096 SHA224:",
													"Mod 4096 SHA256:",
													"Mod 4096 SHA384:",
													"Mod 4096 SHA512:",
													};

		public static string[] ECDSASigGen = {  "P-224,SHA-1:",
												"P-224,SHA-224:",
												"P-224,SHA-256:",
												"P-224,SHA-384:",
												"P-224,SHA-512:",
												"P-224,SHA-512224:",
												"P-224,SHA-512256:",
												"P-256,SHA-1:",
												"P-256,SHA-224:",
												"P-256,SHA-256:",
												"P-256,SHA-384:",
												"P-256,SHA-512:",
												"P-256,SHA-512224:",
												"P-256,SHA-512256:",
												"P-384,SHA-1:",
												"P-384,SHA-224:",
												"P-384,SHA-256:",
												"P-384,SHA-384:",
												"P-384,SHA-512:",
												"P-384,SHA-512224:",
												"P-384,SHA-512256:",
												"P-521,SHA-1:",
												"P-521,SHA-224:",
												"P-521,SHA-256:",
												"P-521,SHA-384:",
												"P-521,SHA-512:",
												"P-521,SHA-512224:",
												"P-521,SHA-512256:",
												"K-233,SHA-1:",
												"K-233,SHA-224:",
												"K-233,SHA-256:",
												"K-233,SHA-384:",
												"K-233,SHA-512:",
												"K-233,SHA-512224:",
												"K-233,SHA-512256:",
												"K-283,SHA-1:",
												"K-283,SHA-224:",
												"K-283,SHA-256:",
												"K-283,SHA-384:",
												"K-283,SHA-512:",
												"K-283,SHA-512224:",
												"K-283,SHA-512256:",
												"K-409,SHA-1:",
												"K-409,SHA-224:",
												"K-409,SHA-256:",
												"K-409,SHA-384:",
												"K-409,SHA-512:",
												"K-409,SHA-512224:",
												"K-409,SHA-512256:",
												"K-571,SHA-1:",
												"K-571,SHA-224:",
												"K-571,SHA-256:",
												"K-571,SHA-384:",
												"K-571,SHA-512:",
												"K-571,SHA-512224:",
												"K-571,SHA-512256:",
												"B-233,SHA-1:",
												"B-233,SHA-224:",
												"B-233,SHA-256:",
												"B-233,SHA-384:",
												"B-233,SHA-512:",
												"B-233,SHA-512224:",
												"B-233,SHA-512256:",
												"B-283,SHA-1:",
												"B-283,SHA-224:",
												"B-283,SHA-256:",
												"B-283,SHA-384:",
												"B-283,SHA-512:",
												"B-283,SHA-512224:",
												"B-283,SHA-512256:",
												"B-409,SHA-1:",
												"B-409,SHA-224:",
												"B-409,SHA-256:",
												"B-409,SHA-384:",
												"B-409,SHA-512:",
												"B-409,SHA-512224:",
												"B-409,SHA-512256:",
												"B-571,SHA-1:",
												"B-571,SHA-224:",
												"B-571,SHA-256:",
												"B-571,SHA-384:",
												"B-571,SHA-512:",
												"B-571,SHA-512224:",
												"B-571,SHA-512256:",
												};
	}
}