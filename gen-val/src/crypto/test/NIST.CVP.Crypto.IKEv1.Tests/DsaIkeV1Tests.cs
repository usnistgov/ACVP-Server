using NIST.CVP.Crypto.Common.Hash.ShaWrapper;
using NIST.CVP.Crypto.Common.KDF.Components.IKEv1.Enums;
using NIST.CVP.Math;
using NIST.CVP.Tests.Core.TestCategoryAttributes;
using NUnit.Framework;

namespace NIST.CVP.Crypto.IKEv1.Tests
{
    [TestFixture, FastCryptoTest]
    public class DsaIkeV1Tests
    {
        private readonly IkeV1Factory _factory = new IkeV1Factory();

        [Test]
        [TestCase(ModeValues.SHA1, DigestSizes.d160,
            "3e2504047ed6ff9f", "6fc4d53c3a8dd703",
            "63e2f01eb9b2ff8b26c20bb1652972a0df94c1601fde641156e124f1", 
            "aae2e3d00272567f", "4960bd49cb00b876",
            "f5b7f1b36d616775de9114e41909a0f9cdf59ae1", "9b96f5923cdfe6f382ddd01a5484c218213abe3b", "1ddb9c9b8639fe84849de502cb3851cfd3bf78a8", "ad778121098629828f95012f0c102a8968d5e286",
            TestName = "DSA IKEv1 - SHA-1")]
        [TestCase(ModeValues.SHA2, DigestSizes.d224,
            "ccf716dcc1a03653", "cce91bfa6645e0af",
            "e669e04bd9b24043381caece992a45f92e6377e0358c244b82a37b56df2025c56b2d6237009161905210c6a0469b6af7c750db34be1b654571dd292ade264a63b0e62ef29815f0990cb5efbb8ae3d277cf45019a81d1728fb08b2602740d5f8f1edb473b530f7e4ff1056680f9b9bd87a1ace381b7ca64f6c8dd3ae5026df2dd100f718c7e97090e1c4e997ed1cd00ef31a86a0cde7ff9dda8aca18d6a925d41d4b723e28849b1f87492a674008ca37ce8a493c49839d6fc2d098fc203551ca6ce5fcf3cc655b3f809f190bec217fee007e77747b1535ae96c5ba5c5613378c7a9b4d8b50ef5a552216d69f535416eef35770cf3be3be89529f17b79db346d26937848bdd9f4575ed4e06a348de9aba154374224f17a16dc981ae3bd2a18e8ffad8c0e963062dfe6c38537846e3bf247f6ebfd016b040ad30b7695c0f54efd474cda05604535782ae85b924138600dbb490623dd6dc66096539173adb6c6e289d264f73d724f59f65401893f5892d72164eca9f5e9b5fa172873cad6cbfbc1239db8af3435453dadaebe2a42fb8a46390663294c87ab19a8e9be8370e9bc83d8a339bdb2b07267deb0e632f0b9a70621a3c1c73c6632bc058a1983a82bb002679d43843923c86671a79c3889806e3e09638231c635fa55c48f4dfa55d70bdc5e6d401bc4ca4c6fbecfcde9f61dda45a2d60962fa876775d355dfc38fcf0110029ef37a7ecbb8d72b41f6eb1862b1e764c675d96918e596c3b6a0a3fac33d921e7750088c9202cea01f3a8e7370b17d247f5530270c69cca7f67ff3e9ed406172787c171949d56dc5a358be6dff10979ea9b0c7fba77b2f1d97fe95910ff6f93b3f233cba9f6158c14396153117e8e2a3e323e9e1b5283421b8011ca3762c046d69d3fb93bc4c0a6b380da43bcd695729c9acc1b2e2c4125bf8d4b903a949fd64e6befb6f01a96c84cc92c8332ea6b7cbd28d474fb9ebd6523617f98a229315827642f763a32d18e7f9073d91f048ce9b1649c659c4f239e54b68889948455ecda23d6e7ef5b59342f1031b50d009d65e3fa093b98fcfc9ce56c8e14280ae399d407ece7e7b02652cb53bff7b0ef68c0aa706039756901be84bb32bdf1c7382088efe75378cde1f5acfa0066f9de72216856b1d7bbcf8b71f23b097156a7ecc1b6b0ab82a30b9e808f5f56dd1b4bddf8b00029800c975c513eaba1d9d18b0b321a13fc0ade43d185c2249aeb0af3cc574d7a8883c8d722d31ddf24c5d71854fa0f62254b53867521481d56a0cadbfd696a31199c66a62f25b7ad75c06f08ddfa4df7cdacadb3baba129cd916bf937eea7e583cd10f5a3be428d6e04e3a548244cbce760f606ab3fb0386758cef800e627ad85f16f7efa570ce2db4b485ffd89b61afb37600701584da5d64f177f2911ff5443e814e50ee7280f36912fe1c20aea", 
            "b2ab40b3f42d5302", "b157557b3026ce02",
            "b44723e5e712f42215d5bcd60727c00e9e605afc33a0d57167f83006", "c137bcf2b6a2a3b66e804b2d600507998a981658702644cb23075003", "b56f313d198e08f8c757870f231e1cc6a3766d7398ee073e290685e2", "ca3f1d86a8ce2bccf35eaece2c3c32ff6da5c11e92c71c02b1dc7c5f",
            TestName = "DSA IKEv1 - SHA2-224")]
        [TestCase(ModeValues.SHA2, DigestSizes.d256,
            "000ef177a58a2987c16ebfd30ab2e3e80483b2bb09a2410cea02667b9c3806a5a476776441a3d0bc8d8c0c544ea371c17084d390e95c9a36233ef44b652c8278bdc2e099c64f25ade68bde1cc5fd655c214b2d9cd3ddd76bdf971de7e77d8d3f440253a266d68e17cf58f1dadfce0f9916b762f145d44e1fe8059f1b8e0a2857d87641a000fb844385203cb1f5ba46e245676df66d12cd83f59c44c56129a16936002968543cfca5617b893bb7ae25257c96a931323849f1d9db5a4c5440a8302fc3a7b4eda7fc09752d543b4f516819d2a946371c5f539c78bb5b6955b02a33b7f5762747f1446ccfa5fcb2c3f6a1e391a04d78b520b6ae1198b10406fc33aa", "8777c71b685ae95c118dc7de1712b333cea5b7c23e3edc685a27daebb7311dc2cb29ac815e6f3798a0313c788bdbe24fdec64e361aa85201f37add7f839ee68a3aef9d59650b808a1fef8b6b2af8c6d5912cf09b4e71f9ce0de6925e0eab0765ef1c5a6f851303ea03f9d24f8a33207e3f6a5f7566e7d389c368bed5d448512eeb4f0deca27df536ebd25b551ccc9aac06490033ead5afba08395498739166b222d24de5a88d970e70dede416f452411b3d65d555f6e7b1e74738f166cb21141b92665dd268d67ed517c82d1fbd296665bea5eb99dfd615aa3da9751470d62401557e372e7b7f715a9b1ea33a1f2090ec5baebacaa693d40ffc7d2692f73282d",
            "1929e6a0cdaeaffe709bff22762fbc31e8a5fa08a5bc8289e77d8079", 
            "cec3c1c58a8fab78", "05b6ae4a923ef4d0",
            "f0949c6b5ac21cf1786f2f5c359f0b40ed85b5840f9b05e105d43e44dd9e4f20", "e2cca3048e227b471e697e86bbcb25f3a92b67974691f4a120e5703fff5d1530", "7efd1afa105696646f5f756707f3fe8f5e3f231461630e4f629a122d7f42efc4", "3f5fda94f7a4c5512958a8110b126cf5e37499c73a6aced51e0e359c6064ed98",
            TestName = "DSA IKEv1 - SHA2-256")]
        [TestCase(ModeValues.SHA2, DigestSizes.d384,
            "6c78b17fd17e65b313d82550241249414ecff9a40a3b745a9ed239ace4dedd5aea3ed428cf169f2673c3ffdc5a12f69ddc73252dddda3ac425dd6031a6dfcdf6778c5eae40632c0fe6fe6e59bbee62755ca14e99ce2054fed8e4e115bf392f26fbf4daf705492f75019fa288bd7bc5fc0f6d1ec08a7278c9af534680b663aa22dd16eb3d2ce55f02e0a13528aa06d0722488d17181003ac7e4fc184b4222c7c03de37a8513d0787b2e49b45eb5ef232bd033846d4353e5fe7d1b2747eb619d840d377d1342e97473694cd839d17969163b6a52250d03e3a593aee93c82ec94de85818a2ee39a07d5c29ad060b1761cd78ff4c2fd191327f3e4fa0e76bab145f8", "c8e4dbf4815a61b6f9f559f4407dbd91a42f6c2ce6979176e826ac662c0ff129377908049f62822fa6eee4a57fbdb9ce3b15f7e36d29907e3036e8fd7f8442daf94e252b81be7ae9d3cf19bdf79a3c5a26f32197e07d48568a2ddbdf28cc53579932fabc3529ef30e83eb41cecdd2b44a61391d48abff1e0291d578bcfc5d9e665d1a6da9ab18ec260d7d05dd2da4b47a8f548c671a3e1049e15409f076fc7d49cee8dd1a6c6139f811f261e2df8609895a6ba965f3f828864497062ecde0e86d002272ce82f537f6ef0938a41913464f2c9f4cc5609876d93c4477612752377b73d6880cb1f72ed3f65846ab412789b8aafc178ac96c08fb05f3ab6619f78e2",
            "fa2a044aa38f6c7d6191acb81efb7703d9dbfc44d9ea03300b3de036e8dd33a621be0e8188254d1fc579bbd52f072e43f052c7e9878bb6a028cb9bc4f5c0279628bd90a71efe2c30cf3d591f4c6929c6aa8b17f24d44e61a15c89f936266d759d0a6ad791114073ef5e400d0bdcbd92bc364480e02080eeb23f3a2ab4c1e39067de13c1eda2bfe10817ecd49d7f550a67af651ccd7b13e86bd8e638dde8cd9f10300532a243359ec3c4893232df039373bafa176a6c511f767ede23576db4afdc6958b04f9c1727fb574d8887ca570003504c7f3098e0441baaa8ce6bff8e865671d0bc96b624907308f073af91a1655997890fd85ece5788743ac3c6eb3fa1e030c06e2e3a317e4d91fe335705994c8eb7d0bf13613b7c45d67279fbef61e13a873952842da6b73a5b56a887a3640beef2a28e57c8691e5b59adb97b888491f71b3cc36bd14eac1b62f83caab432f2486effaf464546560db52e3234f0de52d52415461303003f1370b8205e66ffdb04a55ddbedf67f610174897be9ba5b1269bc3652f19ebe83bc33101322f317393ff0691a3e533b96a6be40fdbf313cd4dbb153e15d795a5318706f5b6378d56c37a4269ac748bb8b3f361f37a8389a96019eef3593024e3a15a5cf4a3a1b588d2fb9ce6367850054ed6d3d00c8f29bf8d58597130555a6a16e1188917faef12f29c4143ac1cc77724236144b5da832660907564bce4626e7212cd5760d3319e172e52af2ee9e98a0fed2c0495599b428c6a173a493f20a9be1e23c22f9b7823f9dbe25eb157005bfd33005b315384dc5d7187ca191b73a8579349eb25807aaa34df5dc9c23386b381a43d50a3c1bcc9a978a960c3189c04639b8aaccd78e4282320d95c8c3bb9f365104e37f338ee23b8ed47b32c862b8a3820b7ac1da2b8b2e405a72b740dd2928f82694c24e2f23eff9b06111f7625c5d09db53dc03c9fa69be4751bc3ef16144d203eda1623b98e082e685eb9a260e757def527285050d3ba0fcc76d1ca2af3727e278ecd4da8b51d1ce27b8b855e26aade8c3c4d17b3758bc6710a2c4e556b51f07f2332166722e8f65e88d508e7d8de5b4e08df3d77dbe745f6b41b007fc4bc09d7868fd1acfa8c4b51f2e74ac1ccfb2f2dc3c4640825f8244c94a6f65e4fb02d9f3ddd5905ec82e95b67fbeda5b9a2bfceb12ef4c3023c4421e0586664524d136f80981cd32c17043c1e409c02cd42cdaad0bcf1f9c1b9965124cd570eb83b0194324dfd72e4fa8846689f510cf91988b045f78e75e1619bdadbffdf4fcbd18ea133f30166ab492ce1a0002b591166479efa1ae705ca001fa778a696a109f37ff2ac55ee4f27fd4b545650cfa662065cc7bd55592092bc47f7e0941b3488eb276f9f23b6eb3d409432670bc84bea99a5a3168c21d1d1dd6c9907e1847d0d48e8f8c05af1e37b82", 
            "3a519da9a3e567d1", "5daeecc4a30121f2",
            "4f758b699ebe787eb17f1e1a4d896a1449e7d170df1ecaea626dec06412c990f92888361b949c9b6988bf06256e1624a", "e55af954cf276827bce850fbcb79eb79b0cea09de007221cec91e855b157775e3d7d52992e15d7de82703b9c12ae2288", "546b2fcef51997c454c71ea50d8afffecbb45c482f031a998b39591b3189b5bceef3f7ff24b07012e2728afcfb519528", "99aa8161ed3fee110960dca0402b5141b28cb0f36d15c6615c701e8f6801b1eeb06fc247f1b4d64193d4532d11bc2123",
            TestName = "DSA IKEv1 - SHA2-384")]
        [TestCase(ModeValues.SHA2, DigestSizes.d512,
            "b0e77a0cd2d6947c", "e53bc72f8cd7a8ca",
            "f6497c8be362ddf0fef27ff94e37a6d4f1ac2991eeb573356813a782", 
            "146ca99c9573c4c5", "c53d022808d05540",
            "d4967330d69aed79647d62692f97e422b979d03f9293f337fe84d4baff4051657d18bfccbf4e5adacf0226c1f42e78540c3c49baf6ce92a961b649ffe5dc9132", "88a8c0f8dc03765ea8ad6fe9039c08151f5b7941141e152ad1af47a3581613f907556716786f95cffa62fa933e65387b6d8a6d6af2f7c2fb80bb399ea0286863", "454da7a378d0e5239643377d390f6209272037e8f36ba12e5f55a0471ce11a931abcb3a3e5fd26c3fb0240ca1784a03e8c366a2f002544bb923e30e5fd2307d1", "90a047c06f39dabcd7a51a7a7d68f6ff8b8b3f2ad16ef33eb29dba6ce6882ebcce136cb9d373db1354af7dd01328509f415d01968b368d0f75a13af4fffbad27",
            TestName = "DSA IKEv1 - SHA2-512")]
        public void ShouldIkeV1Correctly(ModeValues mode, DigestSizes digestSize, string niHex, string nrHex, string gxyHex, string ckyiHex, string ckyrHex, string sKeyIdHex, string sKeyIdDHex, string sKeyIdAHex, string sKeyIdEHex)
        {
            var ni = new BitString(niHex);
            var nr = new BitString(nrHex);
            var gxy = new BitString(gxyHex);
            var ckyi = new BitString(ckyiHex);
            var ckyr = new BitString(ckyrHex);
            var sKeyId = new BitString(sKeyIdHex);
            var sKeyIdD = new BitString(sKeyIdDHex);
            var sKeyIdA = new BitString(sKeyIdAHex);
            var sKeyIdE = new BitString(sKeyIdEHex);
            
            var hash = new HashFunction(mode, digestSize);
            var subject = _factory.GetIkeV1Instance(AuthenticationMethods.Dsa, hash);

            var result = subject.GenerateIke(ni, nr, gxy, ckyi, ckyr);

            Assert.IsTrue(result.Success);
            Assert.AreEqual(sKeyId, result.SKeyId, "sKeyId");
            Assert.AreEqual(sKeyIdD, result.SKeyIdD, "sKeyIdD");
            Assert.AreEqual(sKeyIdA, result.SKeyIdA, "sKeyIdA");
            Assert.AreEqual(sKeyIdE, result.SKeyIdE, "sKeyIdE");
        }
    }
}
