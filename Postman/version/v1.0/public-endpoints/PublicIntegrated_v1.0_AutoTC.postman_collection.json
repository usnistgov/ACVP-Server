{
	"info": {
		"_postman_id": "7da37bb5-3c0f-49ee-9e2f-2adf89aa60c8",
		"name": "PublicIntegrated_v1.0_AutoTC_NewWebPub",
		"description": "Initial ACVP E2E Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TOTP",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea8a4b4b-7b64-46a0-8953-c74363850e88",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"TOTP Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"totp\");",
							"});",
							"pm.environment.set(\"totp_token\", jsonData[1].totp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/totp",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"totp"
					]
				},
				"description": "TOTP Request to Test Env"
			},
			"response": []
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21ea9d5a-6374-4021-9bb5-b19891baaae3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Token Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
							"});",
							"pm.environment.set(\"access_token\", jsonData[1].accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"password\": \"{{totp_token}}\"\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/login",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"login"
					]
				},
				"description": "LOGIN Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Vendor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be2e0ad2-10ed-4667-9186-6f5c4cc503fe",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 042120\",\n    \"website\": \"www.acme0421.acme\",\n    \"emails\": [\n      \"inquiry@acme0421.acme\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"301-555-1234\",\n        \"type\": \"voice\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"street1\": \"0421 Main Street\",\n        \"locality\": \"Leland\",\n        \"region\": \"North Carolina\",\n        \"country\": \"USA\",\n        \"postalCode\": \"28451\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ae744734-d4ec-45ba-9ab9-f71d3f62406d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status1\")}, 5000)}",
							"else {pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "542541c7-07eb-494f-bb00-4bd92fa61815",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6bf38ce-7e99-4df7-a57f-0efc6506b758",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							"pm.environment.set(\"vendaddrurl\", jsonData[1].addresses[0].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95acb369-05b3-4ce3-9f49-5749e0746a2d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3d3b9d8a-8816-49f4-84f4-afb30e9e33ff",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c133e86e-d638-4739-b8fb-937316c014f9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "69c5f8b1-6939-4958-8f79-b42201773651",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?name[0]=contains:DMC&name[1]=contains:test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						},
						{
							"key": "name[1]",
							"value": "contains:test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Website Start Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1b07cfa4-1d0f-4494-ac49-71500d92a224",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5278118d-fc4c-4f54-bc53-fe64bd633010",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?website[0]=start:www.acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "start:www.acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6b9fc7eb-4a96-4916-8fc3-28ae6b67258b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "76ea071f-72ca-4daf-bd14-235091d8d21a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?email[0]=end:acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Phone # Eq Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c088fde-f411-4145-977e-25bb8fa5c24b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a2160eb9-54cf-45e6-b872-d27d81660d1a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?phoneNumber[0]=eq:301-555-1234",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "eq:301-555-1234"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a3690cda-d8f1-491e-b3d8-f6df46500a44",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"Dave0422 Chod0422\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422@test.com\",\n      \"dmcxx0422@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-998-0422\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-999-0422\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f2c560d3-7608-4690-bba8-6f17adce8388",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status2\")}, 5000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9916063c-599c-44d8-b181-b9c9f353b309",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27b0b4d7-8753-458e-8b24-d08f38c069c0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});",
							"pm.environment.set(\"ven_Id\", jsonData[1].vendorUrl.split('/').pop().trim());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Contact Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "56eea230-aa57-4c3e-bb3a-75c090214a73",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}/contacts",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					],
					"path": [
						"contacts"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b1b5c9c-f54b-4f67-8c1d-4a0523918ced",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a3100b2a-b72e-4f5e-8461-f437a872ab21",
						"exec": [
							"pm.environment.set(\"retry\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Fullname Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "053f0d00-e256-4646-bce5-f4a47ac94503",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7af0aceb-47e8-4d6d-8353-1c3fbd602473",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?fullName[0]=start:Dave",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "fullName[0]",
							"value": "start:Dave"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3465c84-dd68-48e0-acc4-9d1c09a3b2aa",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8226e5c7-0867-4abd-b479-040b21f0a339",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?email[0]=end:test.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:test.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Phone # Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3236b51c-2acd-4f6c-beb1-df9f11247c0e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "92802af9-1b40-4719-92aa-aa4090dfbf07",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?phoneNumber[0]=contains:555",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "contains:555"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Vendor ID Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "184712ec-59e4-4d21-950a-874c48942417",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8d6cec5f-e85c-47a8-b529-4de3f6a8d164",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?vendorId[0]=eq:{{ven_Id}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "eq:{{ven_Id}}"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Module",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23c99206-ca76-459d-bc04-2331e6e326a0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"addressUrl\": \"{{vendaddrurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9768cd8a-ce1e-480d-8765-4830f72a196a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status3\")}, 5000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1e900bfd-b3dc-49a6-81cb-45f56c3b1929",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23c60b88-7503-4090-9787-b7abbf4e7610",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "693e974f-7300-427f-bc32-fccde4c03f6e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3a045b7e-d87e-4c9a-965c-4ee36d3a7d12",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a4b26d5b-8be3-438f-9ebf-0221e7eb4e52",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "97f14371-2941-4bc1-bfd8-417195b73f5c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Version Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fce9dd32-ca79-449a-bc02-47f5d2ecd4fb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0c8434c9-d93c-43d5-8e51-fed997038460",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?version[0]=eq:3.1A",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "version[0]",
							"value": "eq:3.1A"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Website End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94e24bbe-6083-49e0-9150-6240871fe11d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "835531ff-64a8-4642-b511-b1963bb614c6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?website[0]=end:23.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "end:23.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e1434ca-fe53-427a-9c7f-8e21fc71fa4b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "44972bee-88ea-459e-a24b-28c9c61956fc",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?description[0]=start:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "422860ef-2b60-4c84-806e-2be7f874f038",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e344d910-5782-49d8-9840-b9a5bb06c2b9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?type[0]=eq:Firmware",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:Firmware"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module VendorID GT Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87883616-9183-4c6c-8f83-dc71f45b1197",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7c95509b-fcf5-4750-b4ec-c45800f5b3fd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?vendorId[0]=gt:1000",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "gt:1000"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Dependency",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8673dcd4-5555-42d4-a8c5-ca873a7f999d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6978552e-77da-46a1-b46c-b7b19f32ff15",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status4\")}, 5000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "317fb18d-3b29-4a68-b119-d745b3320548",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c27d3c89-749d-4476-b863-410ab5919b51",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee84e032-8289-4fe4-a4e3-33a45c0c5040",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "755f7cc6-55fd-44b0-8742-b9c5af863414",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc8b9461-5815-409b-8e57-62f4fecce7d9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9de29c3e-7e99-4b56-9736-94307c986788",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37f2012a-c3fc-447f-9063-41795e03fbe5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c9959f79-b3b1-4d9a-a5b2-e16183e9be7a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?type[0]=eq:software",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:software"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "31127c27-958b-41b8-9add-bcaf2f748d4f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c02356b2-f87b-4cde-913d-c8c61ce0e308",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?description[0]=start:Testing",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:Testing"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE OE with Inline Dep",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7280709c-94e8-4b6b-b899-15654507f6a2",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 A1\",\n        \"description\": \"Testing0428 A1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oa1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 B1\",\n        \"description\": \"Testing0428 B1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:ob1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 C1\",\n        \"description\": \"Testing0428 C1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oc1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status5",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba0ff83b-1750-4a78-99f4-f22647759991",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status5\")}, 5000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2a029fd4-2433-43a6-8227-2e2d25d35dce",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fe00724-16e9-4e57-8d8c-1ee732b51f89",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE List Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a49b1c7a-9502-43e0-9d2e-1ae3344a59e3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ac8291cd-6f53-4989-9010-c8fcdbe689c9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?offset=1000&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "offset",
							"value": "1000"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e7452b6-fb2e-46d7-adaa-8bd2ca417b31",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3cc76960-31f0-4a02-96d7-434a92d04bed",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f930218d-d73d-4913-b9f9-5f35a8a64027",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f990548d-dfc2-4b74-87b7-ce01474d16f3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=start:Test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "start:Test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9a48bfe-9fa0-4a5f-a382-74b6ccafeb02",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(jsonData[1].url).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"name\": \"DMC Test Generic Update\",\r\n    \"website\": \"www.acmegenericupdate.acme\",\r\n    \"emails\": [\r\n      \"inquiry@acmegenericupdate.acme\"\r\n    ],\r\n    \"phoneNumbers\" : [{\r\n             \"number\" : \"301-666-0401\",\r\n             \"type\" : \"voice\"\r\n         }],\r\n    \"addresses\": [\r\n      {\r\n        \"url\": \"{{vendaddrurl}}\",\r\n        \"street1\": \"1000 Updated Main Street\",\r\n        \"locality\": \"Updated Leland\",\r\n        \"region\": \"North Carolina\",\r\n        \"country\": \"USA\",\r\n        \"postalCode\": \"28451\"\r\n      }\r\n    ]\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6817f4b3-66e6-4aff-a0d0-c50cb62ff6d6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status6\")}, 5000)}",
							"pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d4a705ae-1206-4b87-8d06-f236add3f992",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "28d5ce53-c0d2-4626-9bdc-db68d25f4974",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "522dcf1c-38e3-429a-8068-cd91cc9aae29",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"DaveGenericUp ChodGenericUp\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422up@test.com\",\n      \"dmcxx0422up@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-330-7777\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-331-7777\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status7",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82712eee-728d-416a-b693-92b5d573820d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status7\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "30f7e6d5-87b5-4493-adb1-de76c4094477",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b876591-72c4-4538-9b8b-905fa49c6742",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "606c075d-145e-465c-af55-4717640867e8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 Updated ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"addressUrl\": \"{{vendaddrurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423_updated.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Updated Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status8",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "94946cbc-57e2-4761-b59c-9a1befd6b761",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status8\")}, 5000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7744c069-4f7b-4e13-bcef-48066854780f",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cba99ac0-e9bf-4eba-8953-ac9cf3b3d6cb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f093595a-9cca-43ec-b23f-5f74aaed0453",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Updated Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 Updated cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status9",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b60773af-93b2-42be-b821-2e1dc566071b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status9\")}, 5000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ada0825c-16c0-4fd0-8a25-f1a471919127",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ece78116-a7ba-4cd3-b7b4-7b5c9a0d84aa",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "107256fd-1bad-44bd-8182-e2ed6c973811",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 UPDATED Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 D1\",\n        \"description\": \"Testing0428 D1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:od1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\",\n      \"{{dep1url}}\",\n      \"{{dep2url}}\",\n      \"{{dep3url}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3f1af1d-3799-4c58-8caa-a3ae3c872b24",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status10\")}, 5000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c8c6ecc8-c85f-4461-9491-fbffd54db05e",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb960a68-c149-4caa-82f8-3e1cce009aee",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);",
							"pm.environment.set(\"dep4url\", jsonData[1].dependencies[4].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d64c4ad8-3fd4-4696-88b0-4b3b7962725b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status11",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd1ee66f-8eb7-45df-8948-57aafac9df5c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f61aaf79-c568-4aac-a52d-66e18dd0bb15",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "efb49bcb-48a8-4d12-a243-73f7e1fb8a8b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "443791d0-c0d0-4456-a405-41289baf8303",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9283bd1-aac4-470a-8881-e88436843325",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7f1006cd-6c99-42fa-b00e-f1862e3e0f32",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21fcf705-3196-4cfb-acd3-0ee0c3b2ed92",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32aade15-3573-4d42-9783-665cc78eb739",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep1url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep1url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ceb7b61-6f53-4815-8db0-c1731a558c5a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12a\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "73e5bc26-f2ba-4d2f-91f2-44aaf7b40e08",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0af79ad4-3f3b-4b0d-b66a-e9e88b5c033a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep1url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep1url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f044624-3bf1-4905-b356-b26a0e76c9da",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep2url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep2url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7207da37-ec0a-4199-b647-47538eef641e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12b\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2a9999b3-cf88-44f7-95d0-5c4dfd896924",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd6ff3aa-106e-4ef2-9c71-749d7652adc6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep2url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep2url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6536194-ae4a-4439-99de-e44a9b8b391c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep3url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep3url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1eb7725-3c99-42a3-8f62-d49d221f340a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12c\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0760d10a-8101-4b2b-8cc7-011ec4a692b4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b05df64-db25-424f-b399-478d96dd1955",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep3url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep3url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7627b1c-9fe8-4c3e-90e0-bab3d3eba7aa",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep4url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep4url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78e4086b-ba67-4f0c-a09a-278426bc25e8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12d\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d39f6816-76cc-42a2-8bba-7e6833936b1c",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f0938839-9f07-4511-bdd8-568a458c5bb1",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep4url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep4url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2c23121-dd40-493c-9e61-26c252b86785",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status13",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "16a084a2-f3fb-4d5e-8159-1602fa01a1b4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status13\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b17654aa-194c-4584-aee5-b60f40bdfdc4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "106e9894-458b-4c91-b1e2-1f150471cf4c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ae399d8-3283-4a77-b306-d2d5b09b751a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status14",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "217494a1-c645-4f09-b926-25d387c89aab",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status14\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cf019aa3-57cc-44a2-87d3-c098d14cd447",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "283c1cc4-43a8-4953-9bef-7bf35afed39a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4654eab-4c26-41f5-9a82-555e16fd98bc",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status15",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "476125be-db63-4f18-be02-bbc912c5d731",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status15\")}, 5000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "642dc12d-d8ca-4ceb-99bd-04eec6e4eb47",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2d3f089f-87e3-43b0-b80c-2869c6a944e1",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ff2f85e3-96e2-44fb-ba32-c2bccb4ba608",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ddbaabe9-a36d-4dc9-b5b2-d7f53a52a0f9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}