{
	"info": {
		"_postman_id": "8e1772b7-8a9b-4eed-9cc9-58ff7db483d0",
		"name": "PublicIntegrated_v1.0_AutoTCUpdated",
		"description": "Initial ACVP E2E Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TOTP",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ce6b645-fd79-42c3-be9b-cec7235129cb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"TOTP Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"totp\");",
							"});",
							"pm.environment.set(\"totp_token\", jsonData[1].totp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/totp",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"totp"
					]
				},
				"description": "TOTP Request to Test Env"
			},
			"response": []
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a81ee44c-db19-492e-90cf-9071d0bed139",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Token Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
							"});",
							"pm.environment.set(\"access_token\", jsonData[1].accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"password\": \"{{totp_token}}\"\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/login",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"login"
					]
				},
				"description": "LOGIN Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Vendor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35bfae43-48f7-479a-84c8-d77f0de6c773",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 042120\",\n    \"website\": \"www.acme0421.acme\",\n    \"emails\": [\n      \"inquiry@acme0421.acme\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"301-555-1234\",\n        \"type\": \"voice\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"street1\": \"0421 Main Street\",\n        \"locality\": \"Leland\",\n        \"region\": \"North Carolina\",\n        \"country\": \"USA\",\n        \"postalCode\": \"28451\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "17f0a541-82b7-4310-a016-005d1d4f7d41",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status1\")}, 20000)}",
							"else {pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "899b0b82-2146-47ae-b45f-21ee3ba707e8",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18bc3a1a-a32d-4f1a-9463-0f8cb29e220c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							"pm.environment.set(\"vendaddrurl\", jsonData[1].addresses[0].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cfae5382-3499-4b2b-ae89-a60d8ec246dd",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bb6eea4e-3de3-4dad-b09a-6d190a38cc10",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8273c534-83fa-4afb-b5eb-b926a5a0c875",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9c9a0285-bbbb-46d5-9ee3-80c7d0bef022",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?name[0]=contains:DMC&name[1]=contains:test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						},
						{
							"key": "name[1]",
							"value": "contains:test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Website Start Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "805cca72-0a9a-457a-97aa-d07957677efd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9d38b6dc-fc69-4242-b8b4-dcf4ff54c04b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?website[0]=start:www.acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "start:www.acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41fd9711-8e49-4f6e-920b-c22871642ad1",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b60e59e4-12ab-41b8-99fb-1538b1eb4106",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?email[0]=end:acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Phone # Eq Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1e75b5f6-cab8-46ef-b3b8-72b2377e29ae",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "24d679bd-0558-478f-868f-2a350145e4c3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?phoneNumber[0]=eq:301-555-1234",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "eq:301-555-1234"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8a52506-868e-4243-ae56-cf20fc37e033",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"Dave0422 Chod0422\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422@test.com\",\n      \"dmcxx0422@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-998-0422\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-999-0422\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d02e2efd-bb3c-4738-bb9e-3cda0e4a9cfd",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status2\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ededa79f-5e61-4432-9bb5-c6a00a997c3d",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74b489b7-9ddf-4416-b4b3-c8617f12678c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});",
							"pm.environment.set(\"ven_Id\", jsonData[1].vendorUrl.split('/').pop().trim());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Contact Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef2e0b58-2fe9-4633-875f-ef2d0430c309",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}/contacts",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					],
					"path": [
						"contacts"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b618cce-5f82-48bd-954b-139974f0f2a8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "53717e90-4ad7-4610-8945-905b951ed63c",
						"exec": [
							"pm.environment.set(\"retry\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Fullname Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6b2a238d-5aa7-499c-80e3-b54dd4b027c3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b9438cdd-b66b-4e44-b389-b01194fcb54d",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?fullName[0]=start:Dave",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "fullName[0]",
							"value": "start:Dave"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63d6274b-f40f-4706-b16e-63a4d3084b8a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8cfe8b47-a1cb-414e-8cdd-fad8a7f65685",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?email[0]=end:test.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:test.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Phone # Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ecb59dc-db75-47b3-866e-4e2b5e29456d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bc101e34-a4ec-45f7-88b2-472bbd2e660a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?phoneNumber[0]=contains:555",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "contains:555"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Vendor ID Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89912ec9-f50e-4afa-9eb5-e6051a831b81",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b1ae598c-a4ad-4c36-95ee-4ea62461f387",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?vendorId[0]=eq:{{ven_Id}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "eq:{{ven_Id}}"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Module",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4138c45d-4a1f-4ad9-840c-577fd84a0c6e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423.com\",\n    \"addressUrl\": \"{{vendaddrurl}}\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "47bd1b67-44ae-47de-9457-46d7efff1b17",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status3\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b41b22f0-b570-47f7-befe-6e538a80b89b",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0fdfa0f7-cd38-4043-95b1-6843042da609",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4a28cb6a-6f30-4cc9-a465-f1d89b2acda7",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ff713e16-cc37-49dd-b911-e64269c4f3d4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3636d597-d8f7-4f81-9c42-dbf6b36709d7",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "716d3a26-2cb9-4ca8-b094-d1d78eaafea6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Version Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "def9a61c-e8fb-46f2-8c07-642bd25802a9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "db108bcd-f3d6-4234-8730-ff52d0a47160",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?version[0]=eq:3.1A",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "version[0]",
							"value": "eq:3.1A"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Website End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3cd0356b-29f2-4f0e-a79d-1571b961fcc1",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "50aadc8d-9b81-437c-85b5-2b04cbf21ce1",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?website[0]=end:23.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "end:23.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "941090f9-82bb-4723-b034-4a3bb95bc992",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eeaed58e-2860-40f0-966f-ee2ac8b1e5ea",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?description[0]=start:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ecece12-fda2-49c1-a3f3-85ce120b5229",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "03fada08-5235-41e5-a335-c13cc21df7ae",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?type[0]=eq:Firmware",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:Firmware"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module VendorID GT Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b17adb2c-fbcb-4734-84f4-d91104797ed0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5e8c5a54-7489-40a9-849c-19a2e4d4b8a0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?vendorId[0]=gt:1000",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "gt:1000"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Dependency",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18f716d2-5b64-4152-89b7-1a4514ce9e60",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6ea6ace-e555-439b-bd8a-7c0a221cf863",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status4\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d0d9d7a1-1cb2-4cb1-a488-3d8968d91bdd",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9c92c68-11f4-4e82-9886-97ad3c4071cf",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf8d2790-46f4-4757-b510-ca50341f76d5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1a589564-3790-41a6-b6b4-6715ae40efc6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fcb2924-1ed0-4b52-bef5-4dbfc0911756",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "58abe517-8155-472b-a0d7-b8887f8cbe0c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "96120fae-9d26-4d32-9e3a-2c2e13c34776",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "82554f49-5be9-4593-974d-96cb58d13ac3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?type[0]=eq:software",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:software"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c23b4bf2-0854-48a0-8824-3d24e5f3803c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fc3f8cfe-fa8e-46ea-9c78-5b0f6cfe4b46",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?description[0]=start:Testing",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:Testing"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE OE with Inline Dep",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2c8ac5cd-2e08-47d4-934e-253041e65a8d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 A1\",\n        \"description\": \"Testing0428 A1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oa1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 B1\",\n        \"description\": \"Testing0428 B1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:ob1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 C1\",\n        \"description\": \"Testing0428 C1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oc1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status5",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10e22911-788d-408c-8e7c-345d7c16a86f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status5\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "aa6efe7d-b01f-499c-a872-a222184bd2cd",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63368951-ee56-4107-bbdd-0171c4c7816c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencyUrls[1]);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencyUrls[2]);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencyUrls[3]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE List Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9595b92d-0afe-4023-8244-32adb365f541",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7491717f-bfe7-4f2a-8ada-83edb71faccc",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?offset=1000&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "offset",
							"value": "1000"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0a857f6-b5df-4606-9be5-8af5b0fd7ddc",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6b8b75f6-fd34-433d-b1d1-e8a3da7d7798",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6971a991-a5ef-4056-a319-cf181dbdda4c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "841baf1a-d9ee-4afd-a067-a739de49da1f",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=start:Test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "start:Test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8cf1258d-4ab7-40a6-83da-23ebe4c5649f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(jsonData[1].url).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"name\": \"DMC Test Generic Update\",\r\n    \"website\": \"www.acmegenericupdate.acme\",\r\n    \"emails\": [\r\n      \"inquiry@acmegenericupdate.acme\"\r\n    ],\r\n    \"phoneNumbers\" : [{\r\n             \"number\" : \"301-666-0401\",\r\n             \"type\" : \"voice\"\r\n         }],\r\n    \"addresses\": [\r\n      {\r\n        \"url\": \"{{vendaddrurl}}\",\r\n        \"street1\": \"1000 Updated Main Street\",\r\n        \"locality\": \"Updated Leland\",\r\n        \"region\": \"North Carolina\",\r\n        \"country\": \"USA\",\r\n        \"postalCode\": \"28451\"\r\n      }\r\n    ]\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46735304-40d0-456b-8b68-2172a31ed96b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status6\")}, 20000)}",
							"pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b3bfdbc8-d70f-4adb-8b16-482d221f8931",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0965dd6c-ee5f-4228-b65c-b718f539f082",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3c32bc97-1722-4903-9acd-63c254afcd3b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"DaveGenericUp ChodGenericUp\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422up@test.com\",\n      \"dmcxx0422up@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-330-7777\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-331-7777\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status7",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "201a4a64-3143-483a-94c6-921319f17183",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status7\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c72a1ca9-fd6d-47f3-ba94-5a352327dd48",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f6fb102-cc9f-4f36-8b0e-953c71e3e19d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d101c99d-2569-45a1-a2a6-ffdc72079c3c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 Updated ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423_updated.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Updated Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status8",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5927971c-0df5-4a36-9f8d-fad545c799d3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status8\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "72e46b55-c97e-4ad9-a424-ede53b8e4a33",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ece8be62-d21c-44d2-9237-bcf0994e3bc0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb53fc7b-8291-4087-bc1a-08a4405fd299",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Updated Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 Updated cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status9",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2bed0ea4-767c-4001-abee-e73226014ee0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status9\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "aa57d8ce-ec33-4dd9-b7cf-05061b43821f",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6a6efa49-a2d9-4f12-9533-9974697b8742",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0dfcf71a-dac4-45fa-9d99-ec8b87e00a96",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 UPDATED Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 D1\",\n        \"description\": \"Testing0428 D1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:od1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\",\n      \"{{dep1url}}\",\n      \"{{dep2url}}\",\n      \"{{dep3url}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f98ad91-d1d0-44b3-99b3-56714be6e817",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status10\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0047f5a5-d634-4e9c-9be7-87dc00ba66b4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e7718ed-e73f-4a93-aa17-4d795c73c422",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);",
							"pm.environment.set(\"dep4url\", jsonData[1].dependencies[4].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f18258e3-bc5e-4d82-884d-7cc624503ea6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status11",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b4846cc-ff7b-44c6-8a0d-8abd71e0b947",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "27ff764c-2278-46d0-bce1-c878cfa4379f",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e904639c-681c-4900-9f00-1b07f56cb44e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);",
							"pm.environment.set(\"dep4url\", jsonData[1].dependencies[4].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e145fdbb-115b-4775-807c-0bebf4dffef3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6621de76-81fe-4008-9e4a-d54fe2f3fe9b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a764f091-4f65-43b6-848e-696129be4ad4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b0de538-b88e-418b-9f54-a6aef488a509",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67bb3ca3-a742-4ab6-aab4-5b1b900b4ae3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status13",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a65a64d2-e4ca-4c43-b4d1-6ac1fa6f1998",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status13\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ecb81fe7-fab7-4c4a-b163-bef6ffc8acab",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fd29d14-61dd-40ee-8399-043b2749ab0a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70b33042-859d-4159-a324-81ffc7f9689c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status14",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2da63e89-1517-427b-98eb-448b556df68f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status14\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1e9e7fab-265a-4335-b850-d5ad638669e3",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f92b7e7-9ef1-43a9-b2d5-e30895e179cf",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fac3ce3e-3f7e-4c00-a8bb-6e4fb76b34de",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status15",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b8b4422-5467-4d6f-8270-f8d0377e356a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "dfc01f24-b595-4d1f-8e47-8449b8f22d8d",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9984dbd4-a900-4792-9e38-3a38eda5b6b8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fd214353-dcfe-49be-a935-07af06f6192e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1d47a49e-77dc-46b5-90a7-e15432eb8dfc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}