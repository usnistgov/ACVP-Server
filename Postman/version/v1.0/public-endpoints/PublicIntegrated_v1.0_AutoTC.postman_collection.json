{
	"info": {
		"_postman_id": "80f2d2d2-a0e1-4042-a666-f6d43a9075d2",
		"name": "PublicIntegrated_v1.0_AutoTC_NewWebPub",
		"description": "Initial ACVP E2E Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TOTP",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3b6efb2-3855-4327-b44c-b4efe437346e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"TOTP Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"totp\");",
							"});",
							"pm.environment.set(\"totp_token\", jsonData[1].totp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/totp",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"totp"
					]
				},
				"description": "TOTP Request to Test Env"
			},
			"response": []
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9636de48-26d7-439d-bc75-389ea287ab97",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Token Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
							"});",
							"pm.environment.set(\"access_token\", jsonData[1].accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"password\": \"{{totp_token}}\"\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/login",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"login"
					]
				},
				"description": "LOGIN Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Vendor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82dc7354-253d-42fc-8a18-4872153c2be2",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 042120\",\n    \"website\": \"www.acme0421.acme\",\n    \"emails\": [\n      \"inquiry@acme0421.acme\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"301-555-1234\",\n        \"type\": \"voice\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"street1\": \"0421 Main Street\",\n        \"locality\": \"Leland\",\n        \"region\": \"North Carolina\",\n        \"country\": \"USA\",\n        \"postalCode\": \"28451\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fa38d76-6fbf-447e-ac8a-75c7c3a0478f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status1\")}, 20000)}",
							"else {pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0708be27-d492-48c0-a40d-6b7d9211e66d",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4fe793a6-2c22-433f-a71b-ce298216bc40",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							"pm.environment.set(\"vendaddrurl\", jsonData[1].addresses[0].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d7d5f28-672c-48f5-ba2e-312789927ba0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "24b34e19-90f2-4074-ae09-147bf99f9ef5",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a4af8f1c-cf2d-45d5-b887-2b770197ccb5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3164e385-74c3-46b7-a09a-fc8f3e139bb5",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?name[0]=contains:DMC&name[1]=contains:test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						},
						{
							"key": "name[1]",
							"value": "contains:test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Website Start Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d8510236-9b45-464f-97e3-ae3c033b1d13",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0614f78c-6c39-4e73-a4c6-d5c0f6d9f3c0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?website[0]=start:www.acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "start:www.acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfa1b561-7f22-46a6-ae8d-1c092597b247",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b00f277e-04d4-463b-bc4a-aa2cfa70d82b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?email[0]=end:acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Phone # Eq Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "476ae090-ec23-49c2-9f02-65bd1f0fd571",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "670f22e9-7e88-457c-a55e-b714c4e21e49",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?phoneNumber[0]=eq:301-555-1234",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "eq:301-555-1234"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c036796-7468-4176-ab16-b6c0622cd29d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"Dave0422 Chod0422\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422@test.com\",\n      \"dmcxx0422@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-998-0422\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-999-0422\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b5bcbc0-b423-490f-8e6f-f55046ca6fac",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status2\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "269a675e-ddb2-42e1-951b-31ac1b82ad53",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a183d156-baf0-425c-8d87-ef3e462a158c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});",
							"pm.environment.set(\"ven_Id\", jsonData[1].vendorUrl.split('/').pop().trim());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Contact Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc9d5000-8510-4463-aaa3-8f03deab831d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}/contacts",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					],
					"path": [
						"contacts"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "80e6d2f2-2978-4a44-85e8-0432090f0132",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5579adc9-b1bb-425f-bd6b-a6fbed45d5b6",
						"exec": [
							"pm.environment.set(\"retry\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Fullname Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11f67dde-315f-4930-befd-14e7e8d48c1b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2414f89a-81a4-4b03-a4d4-e7f21d886cee",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?fullName[0]=start:Dave",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "fullName[0]",
							"value": "start:Dave"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1a48da9-200f-402a-9970-598fc47d67ed",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fc2ab7b0-8d4a-4f4d-a213-a86d3dc82aa9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?email[0]=end:test.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:test.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Phone # Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36d0f11f-ff7f-4037-8f2a-9a12951ddf16",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "98e2b8a4-c4ac-449f-82de-85371f60a825",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?phoneNumber[0]=contains:555",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "contains:555"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Vendor ID Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "553b0834-a131-4014-9b4d-d88521f10635",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2d708eb5-61c1-46ed-b94d-fda95246aefe",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?vendorId[0]=eq:{{ven_Id}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "eq:{{ven_Id}}"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Module",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c70bdcf4-dd79-413a-a57c-3f0dcc25d757",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"addressUrl\": \"{{vendaddrurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce1ef2bd-4897-4e2d-9920-e30fc4cd4134",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status3\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4f71650c-a1b3-404d-b9b9-e188ac254ea0",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d15a51a-1ac2-4f99-bd5b-adcd40db65ae",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7fa652b3-1f24-4170-b57e-d29428a9e652",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8c10e5bb-90bf-48d5-b371-6b27eb16d6a7",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfb09a95-1d53-45ef-aebc-cb79ebe4fc04",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9e88c58a-ae72-40d4-b39a-81abf6e8cb00",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Version Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "166fc951-0c49-484a-bc02-f32c4446ad71",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0a2786d4-dd1b-4f8f-88f4-2cf6b3e60950",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?version[0]=eq:3.1A",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "version[0]",
							"value": "eq:3.1A"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Website End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac2539f7-1603-4d58-941d-6f3940ba8165",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eb385907-f59d-4ec0-9284-44ab38a65fc9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?website[0]=end:23.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "end:23.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b64f48b-87b6-4d7e-974f-529b4399e7ff",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6a3b39c3-4959-4ec1-b11d-c702152a4404",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?description[0]=start:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d349daa3-1586-4ac5-a3da-c76082196155",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f9e8b4e7-9375-42b6-8f09-13b81f6932fd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?type[0]=eq:Firmware",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:Firmware"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module VendorID GT Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed1de9b8-133e-4454-aacd-5ac910720905",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e793065b-42fc-4345-9c8d-24466c3df1c0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?vendorId[0]=gt:1000",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "gt:1000"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Dependency",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44442bb2-673c-4c92-bba9-022ee5bbae2a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0ea11f3-a2f5-48f9-8213-a01fdf0356c8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status4\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d35d939d-d548-4564-a9ef-32bbff69e17f",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3f45e566-aca9-4807-8732-f0c9b77cd05b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1791b261-89cf-4a3a-959b-60302de23eeb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0677c532-ad58-4ae8-be04-d4ad44b807bc",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d74cd146-a4a8-47b2-8624-269a7efec321",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f8ec0182-3c37-490f-82eb-f0d1b792e9c4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cf356d9-c96c-4bc1-b5d0-54e2e769f1bd",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "dc60c851-825d-4028-adc6-156df4e68c6c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?type[0]=eq:software",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:software"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eaa4c22b-e7cd-4d08-a7b4-757a5c94e399",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0408f9c6-0851-4fd8-8c0d-b6789491eb23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?description[0]=start:Testing",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:Testing"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE OE with Inline Dep",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8554a8c-42cd-4b51-b4dd-7acc48863ca5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 A1\",\n        \"description\": \"Testing0428 A1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oa1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 B1\",\n        \"description\": \"Testing0428 B1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:ob1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 C1\",\n        \"description\": \"Testing0428 C1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oc1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status5",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ee0b486-841a-43f2-baa6-3e45ec7493ec",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status5\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0e48f9af-0674-4136-819a-b04c62430c86",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7f54d633-a3d0-4e84-b4d0-b82f1771231a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE List Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "146b198a-9228-4939-8b47-33037251f63e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7ca6e7fe-ca8d-4e1e-801c-c538d9483688",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?offset=1000&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "offset",
							"value": "1000"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dd3b3ad-731f-46f2-8735-178154667988",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5edb54d5-7a7b-4205-ae42-f3197973f563",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2635b418-48c9-4772-bb4a-3967d1d307b7",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3d5b02d4-6d99-4bdf-a14d-1017e26a32e6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=start:Test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "start:Test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "40c11254-3107-41bd-a7f2-21abd142e6ac",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(jsonData[1].url).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"name\": \"DMC Test Generic Update\",\r\n    \"website\": \"www.acmegenericupdate.acme\",\r\n    \"emails\": [\r\n      \"inquiry@acmegenericupdate.acme\"\r\n    ],\r\n    \"phoneNumbers\" : [{\r\n             \"number\" : \"301-666-0401\",\r\n             \"type\" : \"voice\"\r\n         }],\r\n    \"addresses\": [\r\n      {\r\n        \"url\": \"{{vendaddrurl}}\",\r\n        \"street1\": \"1000 Updated Main Street\",\r\n        \"locality\": \"Updated Leland\",\r\n        \"region\": \"North Carolina\",\r\n        \"country\": \"USA\",\r\n        \"postalCode\": \"28451\"\r\n      }\r\n    ]\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1a39215-275d-4c16-b9cb-55b364bf0fc7",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status6\")}, 20000)}",
							"pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5eb54ff7-912a-464b-9609-005fa7cf7ed6",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "31c236cb-505d-4f7f-8e82-f1170911f905",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d310fd7e-ec37-48b2-965a-08ae7e4f96a3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"DaveGenericUp ChodGenericUp\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422up@test.com\",\n      \"dmcxx0422up@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-330-7777\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-331-7777\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status7",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed1a2a8d-9840-4e0e-964b-1a8a82a493f6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status7\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "edc383ab-d042-460a-bb40-68b4dd4dfb0c",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25187c2f-cf5c-4c1c-a2df-486e9926e4cc",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "608f0a72-6bb9-45c0-9906-b667db9c961e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 Updated ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"addressUrl\": \"{{vendaddrurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423_updated.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Updated Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status8",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1c49dc5-8469-46de-aa4d-3a6d0bace187",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status8\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a42c2efc-ea28-4a1d-8723-7282e5f171bb",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a2f8c8b-fde3-48c4-81e2-b9f05444a391",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fed23292-9560-4b0b-ad4c-069198a30d4d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Updated Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 Updated cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status9",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4758793a-ddb1-4b96-96f9-38ba461147eb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status9\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5a65b1d6-f213-4728-8253-2a1e3356beef",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "389da4a8-a360-42a0-991e-b2336aaa7643",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bcb1728-e16c-443b-9d24-cb05efad817d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 UPDATED Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 D1\",\n        \"description\": \"Testing0428 D1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:od1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\",\n      \"{{dep1url}}\",\n      \"{{dep2url}}\",\n      \"{{dep3url}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da488a7a-bc92-451f-aa32-6409cacfbb82",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status10\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6ac15a5f-bd1b-4249-a48c-41978e8a7a19",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c4499a1-db6b-4fda-b320-dd3da696d4ee",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							"pm.environment.set(\"dep1url\", jsonData[1].dependencies[1].url);",
							"pm.environment.set(\"dep2url\", jsonData[1].dependencies[2].url);",
							"pm.environment.set(\"dep3url\", jsonData[1].dependencies[3].url);",
							"pm.environment.set(\"dep4url\", jsonData[1].dependencies[4].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7db39f6d-a8ab-4f7f-9df4-27c65f7a5260",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status11",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf3b3332-bb82-4409-955d-99c221bc41a8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "de5034c9-1494-44d7-854e-dbb626bcad06",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1cfb178f-b27d-424c-8f8c-d6ca3cf6afbd",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8edea0-d595-447d-b890-d6dbcfd357a6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50612e5f-ef66-4fa5-9175-b65c4413d4c4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5d4b214b-ea89-4208-97e1-e57467103913",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "353882fd-be8f-4b69-89e3-93ffe295d5b6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "246697f9-df50-4dbd-af2a-9cab2e0cc363",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep1url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep1url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ff7ecb2-81f7-43b3-acc2-d6cba0810b03",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12a\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4d12bb1f-9aad-40df-a210-ba3a7c28be13",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f210039-a6d2-46b5-9caa-502c34ddd479",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep1url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep1url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b85e7a2-28b3-4e67-8eb4-ca3575d64044",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep2url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep2url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aadb6271-b868-47ea-9c43-bb2a625e8bfe",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12b\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8fe90ea1-53f1-4feb-971a-4fdc3755d151",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63422873-efbb-4a1a-b607-20afe5d3c84a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep2url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep2url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "486789f9-49f0-41c3-9578-df53c4968e55",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep3url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep3url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "acb546aa-c7b6-487b-bfa2-85d6107f73c9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12c\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f009c7d6-3a0b-47de-bb3f-82b2e33807fc",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35826b6d-93ec-4e92-9310-3a7b51cde168",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep3url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep3url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency1d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29599b73-8030-40be-a22c-1a8653ead9c2",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep4url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep4url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b10a62df-6933-4bb2-a8d0-e2ea3b80087d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12d\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cec00031-bacd-419b-87ce-62cea76d0177",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP1d",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6976ebce-1a49-445d-9bac-b4cb5d0e0ae0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{dep4url}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{dep4url}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49f12519-b017-405d-ac84-002929b12678",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status13",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a1a6253-f693-4fda-a0bc-8b4cbe29a3b0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status13\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a2b050d0-2bb0-41e5-bf2a-17df0e68355b",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfc43d31-cd0a-481b-b072-03511a798cae",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5290a7a7-b3b2-4689-b2a2-b887fc239b1e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status14",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a79cd557-b419-44f9-82d0-0f696d18ebad",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status14\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "66462034-21b9-4af7-811c-c47ff4ee0382",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b357e048-1b39-4026-9064-e2dffc140e2c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a64bd140-1bcd-4185-8aba-53746c8bf216",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status15",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1805a41c-593f-4e03-8d76-1cd41b7fe155",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status15\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d536b26a-71d4-4e6b-8ab6-753125280734",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92292730-ad8c-4931-9af3-5ecf0c6dafba",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b62452c8-10fb-4f4c-ac83-bc2b3f9b28b3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "22567955-9583-4ee0-8b9a-f21731d36325",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}