{
	"info": {
		"_postman_id": "16ddf362-b312-445b-a3f6-e4f2bec92625",
		"name": "PublicIntegrated_v1.0_AutoTC",
		"description": "Initial ACVP E2E Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TOTP",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9891de7b-97e8-418d-a05b-018234690d3e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"TOTP Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"totp\");",
							"});",
							"pm.environment.set(\"totp_token\", jsonData[1].totp);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/totp",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"totp"
					]
				},
				"description": "TOTP Request to Test Env"
			},
			"response": []
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "086c75a2-68b3-4d94-8208-2085cf1889f9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Token Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
							"});",
							"pm.environment.set(\"access_token\", jsonData[1].accessToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"password\": \"{{totp_token}}\"\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/login",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"login"
					]
				},
				"description": "LOGIN Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Vendor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a0ece5d8-c306-4775-b1af-c4a035e72405",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 042120\",\n    \"website\": \"www.acme0421.acme\",\n    \"emails\": [\n      \"inquiry@acme0421.acme\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"301-555-1234\",\n        \"type\": \"voice\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"street1\": \"0421 Main Street\",\n        \"locality\": \"Leland\",\n        \"region\": \"North Carolina\",\n        \"country\": \"USA\",\n        \"postalCode\": \"28451\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b0018621-b554-4590-a075-657693cffc34",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status1\")}, 20000)}",
							"else {pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c9af0083-44c4-46a0-8a8b-924b4c72b11c",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba1095be-ac2b-4110-ab1b-0b4dcb271690",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							"pm.environment.set(\"vendaddrurl\", jsonData[1].addresses[0].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "974747fe-a771-4f04-84f8-beb4fc6c4281",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "530f87d4-5928-456f-a2e3-a85d9981debb",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e4737a7-a81d-4bb1-9720-c08815da2c2b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c401c887-10aa-49e7-bf50-a92132b6a590",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?name[0]=contains:DMC&name[1]=contains:test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						},
						{
							"key": "name[1]",
							"value": "contains:test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Website Start Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fd034010-a65e-4a1c-be9b-add5a599cd18",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "95026a81-85cc-4ef9-af63-7607f28df82b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?website[0]=start:www.acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "start:www.acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49d3ac52-b803-48e0-a036-941ba2910d2a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3a4d8557-6ccc-4d22-b114-311dde0fc240",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?email[0]=end:acme",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:acme"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Phone # Eq Search",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f5fd89f8-2c0f-43ee-812c-06c2ddb35ea3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab8b0945-1fe1-4c8a-88e4-6cb5bb2a236f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/vendors?phoneNumber[0]=eq:301-555-1234",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"vendors"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "eq:301-555-1234"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "930a8110-720b-4723-a455-2506b68d4471",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"Dave0422 Chod0422\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"emails\": [\n      \"dmc0422@test.com\",\n      \"dmcxx0422@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-998-0422\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-999-0422\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12fe1fb7-0f45-4d01-a235-7ad805d1d62b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status2\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c76b5e75-76d9-4ff6-98e9-c2fbcc2bfaa4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "12703c5f-b3f5-4c10-b825-fb75e7a359df",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Contact Info_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18bf45b9-dbb4-4bdc-a845-b302f375e0c3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}/contacts",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					],
					"path": [
						"contacts"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b785e618-82ab-4079-8c05-862829154750",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f14c13ae-624f-4853-8eb2-3ac41c8a4496",
						"exec": [
							"pm.environment.set(\"retry\", 0);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Fullname Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "96660bd5-e4e4-4648-b67b-1b3eb0a48e65",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6ca5f409-e8ee-4ab5-98d1-3dc0ae7a5df3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?fullName[0]=start:Dave",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "fullName[0]",
							"value": "start:Dave"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Email End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89d6f0f0-e388-416a-9ae8-7ef03ac5c9b7",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eaf01d97-cbd3-45b5-9f6f-81f22c9873a0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?email[0]=end:test.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "email[0]",
							"value": "end:test.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Phone # Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1f75a76-0f56-411e-b23d-0bbef4e80d08",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0caec3e1-f0d7-4df1-8693-bd80d53a0120",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?phoneNumber[0]=contains:555",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "phoneNumber[0]",
							"value": "contains:555"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Vendor ID Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "958e5430-e9e5-4a3b-8aec-2a2a0d2a12a4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ae9541c6-2ad6-4b5a-ba8a-79f1e798186c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/persons?vendorId[0]=eq:11184",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"persons"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "eq:11184"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Module",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "677dcdda-8dec-4acf-af38-37a533c9c909",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"contactUrls\": [\"{{perurl}}\"],\n    \"website\": \"www.usa.nc.cp0423.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b01bca1-be89-421c-a073-a8fb33795d3d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status3\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2031986e-764f-4708-a3a0-460d50462539",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1d00399-9f43-45cd-85ee-f4ff227e55fe",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cf703306-c044-4b4a-aa74-9165c066dcca",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c87f3f53-3d6e-4323-9cf0-eb8247b4ee56",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd4c774a-0509-4302-aab6-decb701017a6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c868e821-f917-4cc0-9234-6b959fd030db",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Version Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2c934f6c-1e97-41b9-afc7-123d596b6071",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f5468de5-6a4b-4c13-b438-94cfd3fa27f6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?version[0]=eq:3.1A",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "version[0]",
							"value": "eq:3.1A"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Website End Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99032d4f-353c-41cb-8f2f-a8792328deb8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8d773649-9a63-4654-8748-c9d39d5173e1",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?website[0]=end:23.com",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "website[0]",
							"value": "end:23.com"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9436b0cf-4b0e-40f1-8846-2fb4dd45260d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "97e7e106-a5eb-4cbc-850a-c6dce6e21dcd",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?description[0]=start:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed8bd388-68ef-47ab-a580-6113c573a5a4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f26ad962-4544-4878-849e-824a134565dc",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?type[0]=eq:Firmware",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:Firmware"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module VendorID GT Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11518939-2f4a-4367-82d1-e067fe5a71ee",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "95af13f9-dca3-4081-915e-f1ed7952cf93",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/modules?vendorId[0]=gt:1000",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"modules"
					],
					"query": [
						{
							"key": "vendorId[0]",
							"value": "gt:1000"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REGISTER Dependency",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd2ba15d-f1d7-4fcd-bf80-496006552de6",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "921f2a78-0cdf-4dc0-ae8f-b0025f45002e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status4\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "935b1b80-5812-4161-a419-708eadaf173e",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5dab1e8-3be5-4075-a870-75a9706d1376",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a105987-35f7-4f07-8b3d-8ae0dc42f0c0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7c61950b-86b8-4bc0-a432-085c3e1b8cba",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?offset=500&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "offset",
							"value": "500"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0ea6928-b03b-4e69-8c7d-f659e900c5a5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "929bd80b-c33a-47b4-97ed-ecac5c584f95",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Type Equal Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6089ebd-eaf7-4bac-903a-cf4f8be3181f",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "227c8b87-c620-4d24-ba0a-ef10f211d15f",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?type[0]=eq:software",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "type[0]",
							"value": "eq:software"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Descr Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "510023fb-0f20-44fa-966e-b4848332d376",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b5e99512-5ab5-424b-8314-471c66d0dd6a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/dependencies?description[0]=start:Testing",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"dependencies"
					],
					"query": [
						{
							"key": "description[0]",
							"value": "start:Testing"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "CREATE OE with Inline Dep",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "540cc5a9-8b5e-4a7c-a341-e4b706155da5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 A1\",\n        \"description\": \"Testing0428 A1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oa1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 B1\",\n        \"description\": \"Testing0428 B1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:ob1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 C1\",\n        \"description\": \"Testing0428 C1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oc1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"{{depurl}}\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status5",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6cbd6891-662a-4cc2-b8ca-9db124a24362",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status5\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "064a60a1-3c1e-4d6a-b6a9-25a583e8659c",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c77e610c-8d88-41d0-8901-c1e240e6e07c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE List Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eda9654d-7d71-4c2a-9f32-4c10aa3b2bc2",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a17bfdf6-7608-4861-83e7-08325e915a93",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?offset=1000&limit=20",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "offset",
							"value": "1000"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Contains Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06ad4fec-58a8-4f14-9234-f01c1c9184ac",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "46542655-b704-4d47-9610-c8117659c950",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=contains:DMC",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "contains:DMC"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Name Start Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3884bfa7-805f-4764-8c89-07df55f910fc",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Total Count Chk\", function () {",
							"    pm.expect(jsonData[1].totalCount).to.gte(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "68d3c2cb-61a9-4da4-941b-f544d47885d3",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}/acvp/v1/oes?name[0]=start:Test",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}"
					],
					"path": [
						"acvp",
						"v1",
						"oes"
					],
					"query": [
						{
							"key": "name[0]",
							"value": "start:Test"
						}
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc9aace5-ffee-44f1-b059-0c5d503ceb63",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(jsonData[1].url).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"acvVersion\": \"1.0\"\r\n  },\r\n  {\r\n    \"name\": \"DMC Test Generic Update\",\r\n    \"website\": \"www.acmegenericupdate.acme\",\r\n    \"emails\": [\r\n      \"inquiry@acmegenericupdate.acme\"\r\n    ],\r\n    \"phoneNumbers\" : [{\r\n             \"number\" : \"301-666-0401\",\r\n             \"type\" : \"voice\"\r\n         }],\r\n    \"addresses\": [\r\n      {\r\n        \"street1\": \"1000 Updated Main Street\",\r\n        \"locality\": \"Updated Leland\",\r\n        \"region\": \"North Carolina\",\r\n        \"country\": \"USA\",\r\n        \"postalCode\": \"28451\"\r\n      }\r\n    ]\r\n  }\r\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "086b7008-8de7-4024-929c-bdfa9389017c",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status6\")}, 20000)}",
							"pm.environment.set(\"vendurl\", jsonData[1].approvedUrl);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4f9c2ecc-4d2e-4ebf-94e5-b68e0c1beb56",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb731a8b-f943-4afe-b2ac-7bed4744de9a",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1c38ee6-8422-4f4d-a731-cc332debc168",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"fullName\": \"DaveGenericUp ChodGenericUp\",\n    \"vendorUrl\": \"/acvp/v1/vendors/11184\",\n    \"emails\": [\n      \"dmc0422up@test.com\",\n      \"dmcxx0422up@test.com\"\n    ],\n    \"phoneNumbers\": [\n      {\n        \"number\": \"555-330-7777\",\n        \"type\": \"fax\"\n      },\n      {\n        \"number\": \"555-331-7777\",\n        \"type\": \"voice\"\n      }\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status7",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bfcb48d8-a5b9-4bfb-991c-52c01215a1e4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status7\")}, 20000)}",
							"else {pm.environment.set(\"perurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "89310a1e-f739-4ce4-b901-1c4d7cccb30c",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ccd29bf4-0a36-465b-a67e-b15979aeea94",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "422e32f0-d00a-4062-a658-169a76038cf0",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"DMC Test 0423 Updated ACV Test Module\",\n    \"version\": \"3.1A\",\n    \"type\": \"Firmware\",\n    \"vendorUrl\": \"{{vendurl}}\",\n    \"contactUrls\": [\"{{perurl}\"],\n    \"website\": \"www.usa.nc.cp0423_updated.com\",\n    \"description\": \"DMC ACME test module with more bells and whistles.  Updated Run 0423.\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status8",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "949cdfed-e4aa-4b96-a3e5-152281550150",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status8\")}, 20000)}",
							"else {pm.environment.set(\"modurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7369fd5a-89a3-40f0-8fd7-8c6b3451e2fe",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7a97670-1073-42c8-8cc1-7dfb5360b137",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc415ea3-caa8-43c8-882e-796392e349ee",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"type\": \"software\",\n    \"name\": \"Updated Linux 3.1 DMC0427 Extra\",\n    \"description\": \"Testing0427 Updated cpe-2.3:o:ubuntu:linux:04.27\"\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status9",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1d615d8-8c5a-4a9e-8cce-f4698cce84b8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status9\")}, 20000)}",
							"else {pm.environment.set(\"depurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "680bf02f-9118-43f2-a411-9d46a552dced",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4390cfed-f1d3-48a0-84bd-6d11d97f2018",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "UPDATE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83554b3d-7224-464f-8659-11df6f01b81d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"acvVersion\": \"1.0\"\n  },\n  {\n    \"name\": \"Test DMC0428 UPDATED Inline Ubuntu Linux 3.1 on AMD 6272 Opteron Processor with Acme package installed\",\n    \"dependencies\": [\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 A1\",\n        \"description\": \"Testing0428 A1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oa1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 B1\",\n        \"description\": \"Testing0428 B1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:ob1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 C1\",\n        \"description\": \"Testing0428 C1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:oc1:ubuntu:linux:4.3\"\n      },\n      {\n        \"type\": \"software\",\n        \"name\": \"Linux 4.3 DMC0428 D1\",\n        \"description\": \"Testing0428 D1 cpe-2.3:o:ubuntu:linux:4.3\",\n        \"cpe\": \"cpe-2.3:od1:ubuntu:linux:4.3\"\n      }\n    ],\n    \"dependencyUrls\": [\n      \"/acvp/v1/dependencies/23059\",\n      \"/acvp/v1/dependencies/23060\"\n    ]\n  }\n]"
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "REGISTER Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3d5f04d-3106-4886-9e88-ea37d652cf18",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status10\")}, 20000)}",
							"else {pm.environment.set(\"oesurl\", jsonData[1].approvedUrl);}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5a691023-d73c-40de-8642-496ca98a01d4",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d6988a8-f24a-4766-ad1e-3f9cc3e15415",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE OE123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "71c8805d-6d50-4a44-bb1b-44cce4144072",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status11",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1b60b53-9c45-4844-845c-e9d8dd7650bb",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e095a6fd-4946-4b12-a696-8041b62a8eac",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ OE Info_OE123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0490fccd-0ee6-4948-9730-ed58545f1876",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"OE Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/oes\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{oesurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{oesurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Dependency123",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba7ab19a-c9e3-4f33-b6b4-0f66383da0a8",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status12",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a10e7d27-6bf2-47d4-bcec-b600c7cf36f4",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status12\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "564cdc90-8f31-4142-b381-9a640640d68b",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Dependency Info_DP123b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35eb4169-9d9b-4df2-8af4-be8f52891f39",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Dependency Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/dependencies\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{depurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{depurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE ModuleXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0af8964-2e6b-490a-9447-0f7b689a63b9",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status13",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "675e3888-43ee-4777-83c9-dd38793a271e",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status13\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "dfb173d0-1a87-4fe9-9a14-8ff673c12255",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Module Info_ModuleXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd5836ba-d995-48ec-83a9-43ea131a7042",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Module Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/modules\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{modurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{modurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Person_PersonXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cfc15cc-8aac-44f8-bd2d-86feaa636a4d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status14",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "134d0c66-fda9-4b3d-b45a-10bf97c103f5",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status14\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9225c077-3550-4bb0-bf1e-3041376caff5",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Person Info_PersonXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79c82a84-55d1-45f1-836b-46129b792d03",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Person Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/persons\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{perurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{perurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "DELETE Vendor_VendorXYZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cadc4975-1fd2-4dc9-8ac8-72404b9bf93d",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"requrl\", jsonData[1].url);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Request Status15",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8476d829-eea9-4287-8a4c-00258b2b2fb3",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(jsonData[0].acvVersion).to.eql(\"1.0\");",
							"});",
							"pm.test(\"Request Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/requests\");",
							"});",
							"pm.environment.set(\"reqstat\", jsonData[1].status);",
							"var reqstatus = pm.environment.get(\"reqstat\");",
							"if (reqstatus == \"initial\") {setTimeout(function() {postman.setNextRequest(\"REQ Request Status11\")}, 20000)}",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bc60d3b1-cf71-41f2-bcb0-9555d385e56e",
						"exec": [
							"pm.environment.set(\"reqstat\", \"initial\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{requrl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{requrl}}"
					]
				},
				"description": "Vector Request to Test Env"
			},
			"response": []
		},
		{
			"name": "REQ Vendor Info_VendorXYZ3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72809eb1-eedf-4c90-9c34-83859c018051",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Version Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"1.0\");",
							"});",
							"pm.test(\"Error Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"error\");",
							"});",
							"pm.test(\"Vendor Chk\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"/v1/vendors\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "https://{{publicApiRootUrl}}{{vendurl}}",
					"protocol": "https",
					"host": [
						"{{publicApiRootUrl}}{{vendurl}}"
					]
				},
				"description": "Answer Request to Test Env"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "aa215e26-763c-4b50-b4d4-1fb30bf8128e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7f9ceb7f-76bc-4d97-88f9-824487e79096",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}