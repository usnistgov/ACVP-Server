using System;
using System.Collections.Generic;
using System.Numerics;
using System.Text;
using NIST.CVP.Crypto.DSA.FFC.GGeneratorValidators;
using NIST.CVP.Math;
using NIST.CVP.Tests.Core.TestCategoryAttributes;
using NUnit.Framework;

namespace NIST.CVP.Crypto.DSA.FFC.Tests
{
    [TestFixture, LongCryptoTest]
    public class UnverifiableGeneratorGeneratorValidatorTests
    {
        [Test]
        #region Generate Tests
        [TestCase(
            "b62aeacb3acaba9180f3793e9b85e5faa8522fb97bc419563fe1078f35aaddd386d79ff2364b25dab3d530842d37573db48df014f87f6485806741cdb9315a45669b524a71ea1be213410c8efd12b89db99ca65d90d75ef74b5eefc084238f5b9df579557a6299980ae5c4aee90354be460e17a897ae1471ecc13c1a05efbe29",
            "bd8bf4af219dc5829ecf3fabc6160a1e6d16a3fb",
            TestName = "UnverifiableG Generate - 1024 - 160 - #1")]
        [TestCase(
            "88cccd35328833adafb3b1c19f4f51494a6dbee7ad36aa17f805c38f376f5878cc8e4ef2195fcd74aab2a2629976b4caa82018102680028869c6a10718fa1def01f34190d282208a8d67f1bacf2ecee8d054bd1fd352bed01257168c70d0db1d21eb6ad553ea39321dca66c643877749c030e5fa3fb6c5bb3a66438dcd9442b010dc867d9ce930747e572ea51c880dde99f7f55b3ba21ae025c99f1326666f9688acd293f3eeff5d916c233f50b6f586beaf7b221245cc46eb43e1d4df0a9bfa65f8b93f694d55499d47a64bf434c731a13801d48ca7f2e2a76c74a926a7fdb47e9e4885512c89ca28f67d52c481ee95069da1ac6b3c6a54f4c11e7cbb374991",
            "ac3dbf47eb4ca3e1119bee5531c5f7fab5d5d27de3a6daa1ec20f331",
            TestName = "UnverifiableG Generate - 2048 - 224 - #1")]
        [TestCase(
            "813be5b70ef1671637ab46af162ec2025019ba03106d6f571f2f38f4cc0a0d69e1ad88b4685a68bf1c8df1262c993a8db5571d23b3ffc6f3300525731dce726a22d3b64ef064984a217daa078d9232a49e6fc25d1a6192f9cc57b98af1e4072d8cdef21561ea4b10c9e2ca6fb2e35ad547f35a3655ed717ffc0829f8bad7a8f7bf549ab3625586f34324d91f1b3809d5dceae0e285ade815d4052722b7dc4a13fc2db3ac5314840845aef382149e8d68f28d389c3168cb6ecbd87515c067b89e13c76051305a7304d0ff398ca894fcf9b8b44e39b660e4cb4c509b70e03289796de59750ac4a96e599eca8779eebee02ca2aaed746c45845640b7b3aafeb3a85",
            "add9637fe9fa8135688f49c5946851935ed13e0c55caaaaa056193e9",
            TestName = "UnverifiableG Generate - 2048 - 256 - #1")]
        [TestCase(
            "db2257a5e0332c253d8601612311e94e9f1e4123c965d508e3c79f9e3c52c46dc3a590d183deb4881ec8c991940c86456810608b5ed325dc0545b6a38057b01208643a82c5253baea3445a85366b795a7f5cb96b40e251bd91857f1aedc4f04611f75775394896acdf109959c2bf82130d90886696c5fc2c1188964c2877e71675fa93b3b0a6631eb382bc76fe39440383e3b70a313fbd8094a95fe547f6076ee2f49b9844db5a3999b94f4780c07f46d31f349f9ee021a67cfbe6e588eca0ba8d87e76fad393b307eda9b8322366b2819164f589d65ad250578baf8ac3a6fe7ebb112c2016e6d9d220ad407cd69deb60b825d8ef6d43f77a52630b6efd0d3b7",
            "8639db05bd2263f915a70ebd694feb2523f79cb091362f8ee2dd045186c64487",
            TestName = "UnverifiableG Generate - 2048 - 256 - #2")]
        [TestCase(
            "96f24095b34e77acdf0353305dd79d860bf2ded6ec7d3c8c47b5ef58e67f94230fd8f199aa9b504783be47d5c84667fff8a9d462b8298d5d7b5bc8e4c12d19682130ce02f990fb9eeaf11881222659737c9164a0be17fe38911a263404d58df10d409b6e0762f2f412a4f66fe09c39398542d6e372ba843f08a602f1b4aa1353fbc72b9a750d04ad9b76d62665f06edcee9442bd570a2860eb6bf34da0bcee0b2fd1d0d03aa9703c1d69e0dd2115d31f7cd2cf17812c6fbb2c401afb9217ba251cf4af12712c8f68f38caba4938e138990f71a937cc5a0f9e22d5c54a6fe001c39b23ea5cdd9ce6164ad383923e063e6cd4a761cd69a49bab28deb30a01dafe23f823269536707e6a7b3f44f021e67fea85105fb1c5b7a1dceb0205741cd672c6b55053e8ced2c59857c8365015abedb24381bcfe05cab204a65251a4869c98e01fbf4f87b3fc13abc1920ec66e6a3660b4ecaeafc65eb620e6a294ced8e0ad0c6a2b9a966659e38d480f4271ea1adead8f7d658e6be9476b789090f4e6ba9b9",
            "92093c2cb9469b433dd1864d477e2cc9fc8b0185038bdc6f76058ae99284bddd",
            TestName = "UnverifiableG Generate - 3072 - 256 - #1")]
        #endregion GenerateTests
        public void ShouldGenerateUnverifiableGeneratorsProperly(string pHex, string qHex)
        {
            var p = new BitString(pHex).ToPositiveBigInteger();
            var q = new BitString(qHex).ToPositiveBigInteger();

            var subject = new UnverifiableGeneratorGeneratorValidator();

            var result = subject.Generate(p, q);
            Assert.IsTrue(result.Success, result.ErrorMessage);

            var verified = subject.Validate(p, q, result.G);
            Assert.IsTrue(verified.Success, $"g = {result.G}\n{verified.ErrorMessage}");
        }

        [Test]
        #region Verify Tests
        [TestCase(
            "c361dcae9d03870c63dc5720d4a945c94917833fb097f5c1731db311ddb55880962b62a248a356c128b5fd9a2934446d288d9cc713d1c9b9a6d9e2773b0105e376228fbbba10ddf5fa794f445b4812f6a7d0d83a36dfc8442c8a6381027e3b78a8132c5a5b752ae470f7c87dc957a308577970d4848e183325bb169844881415",
            "80217553ef20b2638292361089f97d5f25c6e2dd",
            "39ff02daba5af14e5aff3beff3cf01220e2d09d688769c442edb7c6f1b7c7ee56852bc956a46a473b4d87641bacdfe912028ac6b0a69b21b4bbd4e57dd24394f0d8f140b6c0bf1473fa540288d0ad8a3f359bc58a5500fde793afad9f34614dc0a9a1f124e2cf0cd22c970038af744aa10fd3687b5721836d608330b8927ceec",
            false,
            TestName = "UnverifiableG Verify - 1024 - 160 - #1")]
        [TestCase(
            "e0978459a0cd9a8dd68968ba6903470f9f3b0fc1f4292c6bf6cc78c5f28c7ef7b985fee3acbf2b5044775af42771439ed61d38f68304bc55aa6ac8f5536af9422348afcd2c9aeecb3c4823df1dc5d84df4da0604f6e24765b42df1c97b363904d65505533b14e525659f76302b0558c6aff9aae9c6b157c183670db7b5b4db21",
            "ef63f7c5c61297ec5e5ab8fa157641adf1e3be47",
            "7174825c102e0c5c2055dced3c69c7813650cda216c8edd9c214a55f7df53c4b7a7cac1855962204454f6079bbcfd5fb5d73e9d9c981074c31cf938191b7723ee126980909f198d8dd2aadeecd77f23a466790ee32201691d510c9530dde1360bf8894b0fc25986cd0719ba1725cf2580cde0005cc6ab748f465fee9f6ca54ca",
            true,
            TestName = "UnverifiableG Verify - 1024 - 160 - #2")]
        [TestCase(
            "88f384aa581e34dbc2dedf073ea06758e18a6a287beb682fc26b7c525a7ee28d96d640820738d8de2540c8bf62f9270db1345c7add402f92856c1200b8f00296f7cb6210b7c8afcdc348f28071f81e3c9e96e455512e6a67329dbba08d87848de711decfd42181e6315be3640675003462df662fc51bff4892b8a6ad335b61a7c53d4751fe09a9d489e30b99d228d796ce9195bbda9a656bc75624bff7dec6e0afd85040258d5daedf287609eec016de6de65c85b3b86aa015be60e6e2a0418547c8bc4fd8c54698c973349848eb166e06e66f82bece0ac5cb5252ffb443cd97bb6e020103d8f510e69c0711f19bb628fc0cbd7a226a9f8252816b2f3a036bfd",
            "dcf407c85f4982022e79960f7db26f7c99ed3c616e71bf55cb06f863",
            "7420415c64fd2409071026628b870e93b164858c810b78dd7fcabe1365eb895e53d7cc56f0c43a4c486920561c90a3f7841f2d25cdd6bb5a093b891f4d2ee6928dff96e4657e09976b085b76623476d4913046e4be024d6bb3270b8f0cdb74a752dd4daa83f2407beb3c09251c1f96f025893a60b1e3396e8094356378879dbba009fe8ce1ead72eca5ccc7df6c57e09c6e48455a6e88080c0f955a88f1c4f98ead3a079eecd0521c99d39b2e16b1b67955e819ad50ed5d2eb38af430513590d1d70f3ab26c8efa9ec4ad205537425910ec1722eab83395092c9bbcf81bfbd7d4c14f65c2e2d4512318ee2d7cbc0f1b4b3c55e258aea8ab8d93c0dcaca7b5e38",
            false,
            TestName = "UnverifiableG Verify - 2048 - 224 - #1")]
        [TestCase(
            "af73ce0015577f3a7d0a8be1c2c16b4f4ed8277b02d5bd7c3872907ef6775b6b115be2867fcedd0936b543d295b6ff6bac6b449aa1c50e7ffaa970abab36e3aeb774f961e5e0b8a25a2e1f5980f1b311dcb4bda8df37e1a99b85216c8634f59ba8c7439811aa02b602037d627cf087336df117ae9b6f3683ed77324fd8dfb30738962cbbe4f83a5e472f1cb2134dd52400762715feef922db8a93c22e685543c4f13d8d2d38d2fbcac0a10ce0f86be3e89725eaf2cfc43a0711e34ed72bdfa51e5a881d16759ba9a40fee476f110b49b344264a27df3c09cee85519b43f213187aa40deacb48fab38217d2731d8ca73a438d7b096bcf24f8b843b9483f9b9b71",
            "a016e327e12018d949516460e4c5e687c3f38ac3e344ce82fc79f247",
            "3438c358a4ac21b100085cfdf977a2c91ade0cc2fb3f4e153d37f46de34b061ceae334f95cde5de4f9d57dfded08f04cc01ccf3207658b9eb56987b3d97bb1f74fdc5a9baf5186b16b3f9c0cbb0cea3f18e2679884e3ae557374c02e60a1654dd28746b9a9167c707d0b3ec1bcab666aa1a3cdf4e0d6dde8765ca2531a98f7baadacbeea97c1b0e46113ea92e8c1b157410f26dda878f81aaaf2b92159477d8b996eddd3145774c14523cbaee3e44d117eaeabfb56e9d3e41bfeef3d3b56f1996b79ed60a559b258fa3077528b2064fe487a1dccb53abf7bca2ee434fabc84b1ea6b3bde37660bce2d20681469dbc6ab8900b8f797f01233dae4bd6d2d15e818",
            true,
            TestName = "UnverifiableG Verify - 2048 - 224 - #2")]
        [TestCase(
            "85c022e3ef619a2d9275e449866965ea1840528e659c7e6dde76643ee9c9546842cd1b0fc9ca1b2a7796719c65ba4ec9194ee08576ea6b8d08fbb80b9753811b8e994164c71f50e63498089a1a325f9cb97e227bc91892cce06cb251b24e0f0f019ed250af5aaa0aabedc03d638cf27fb15279f87cbad90dc29724da6bd2fd9964f6430cfce9f1f5460a3bdb202acc8bfdf843cf0abb23d0fb85a16df9b084dbdb518021742685dbbc7f02b50df8eb0ffac1b53553b2d0ef181b6cdfc4c7f19369048997f74a24e83bbd0a9c06a1fb64f3c1dc51f3e3108f1d31d5d9b437c9a1b1c3fce1fc63b6ecc877095d7921980c24dae4dc8325f523e3f7081a9f077f49",
            "d6331ed638d0c29a21a51a914f9a2d5260cb507b69083d89bafaa307",
            "493b0e24710b86cad957c93f23b39d075bf5e00f27bf8ab809545062a9c67aa428fdec239304bea554cd74145eb4096419d908f4dd26c35e6b49a66eed71b12f8a39dd671af93ac640de6c6cefca50038ee809d7040d2edd94f3576513db35d60734ffa3e39c2aefd777fa4602f8971673620baf350602942e9c5676f3504ddea33e9efa90d1ea5f9d7b842d8ce425d9264538c77e0c85646020c7795a1a076a5678586306c86f273999797b8a44c37bcd791759ce5927ed13b045e62b09d1eaaf1a1e8acedfe36c4427dcfb5412384d583292d7fa1f02ad58914e53fe8785a208c1c6510ed18d7ae6d895661b4e227663ab8f6bd87f67747965596a4e912920",
            true,
            TestName = "UnverifiableG Verify - 2048 - 256 - #1")]
        [TestCase(
            "b26dfa4b3b3c3c1f60da9cb83db7a9b1c06457e6b5ada38324563dfe05f6c7bea788cc794ededcdab3badabcd1543ad34e202ca4fd67ec8a2db5b21348d5d545acb2644e05e0075e1432a71e4b43918c40fb483dad52ce1626ed74dfd98ff508360ee22f22fe47bff5414a6467df08023e3a63af4040e844dfabcc4c22a0a5705c8cb55cdf02a96ecd612ea2cf584752a8fec6b6ad5f22cf90dd47ad2dee42e0001da41e54eb106f130f0f68296d88b23de0108d37a8d7509e8d9ed62efa9f5f0730bbf3429687d6c4cb7f3a81fd1b42968fdd058e016fe34b20539aa4d9445b502c2c4c37592640818c4d1c56365f571629022902b52c68cb1eee48cd62f07d",
            "f293b620fdbea327017146477fecde583b7ae9a5a38789c2cc6f697f0e15729d",
            "1396dd2d54e2343c61665dad62405f058e2428c287243f5f5474dc6fc086f11c8ee1765b98456e4c7fcd2057956f776fe41ba75b560d765d22729f7d26b346589700afb0b9e37d95294ded574615dad3c04fa1471e28d5cc4e5d4d7acdb91757ac568a579a0f0ada819d97d3fb3c3962f41845a84be9b8f3681ac22774b2a26b1ca694295838dd4d3b7c3d2fb1c463a8d513514f502702f1f1ee0edf9068266e8419b41d14d98c5fc09bc6d8ba1e8593b87e3ee1b56ada317cc06a7a14d1a9998b1d3588d850fc167ee1b03dbf3c62593dfcab92763b80a80369711f07c1b77675601adda71369de81c90a1c8d012bbf7ca17f8f4467061199edd3a9aebf939b",
            false,
            TestName = "UnverifiableG Verify - 2048 - 256 - #2")]
        [TestCase(
            "a76ae3e8230887e669aa3b02c1b545bce7d623f04b9157450507fde0901ce6eaab4235eaec6d234627e7fe75761151c441ac3bef6b31e92db252ddd5bd0a55eb3b162315a6287fd87568e0059cee1229bbefc7fb1a8dc11bee03bf21ffe7d038c4dc94c1af66cb5f39c7184fd6cd4804af2c392ea6ac8882c7762458c5ad109a479df1737e4a15c3283f5856e0c680efbbc8dae8399962bdd2b4f810bafc5e336d168fe5787ec5850411c29c2b5dd7212a20c841351c7bcf70ef566b90400c2d69eaa8eefef210866873be73f802e8d5c08a6970e3d515c54025b3349797e4baeeb45513db2988b5b4ef02c4638160b58067382ac24a22463df0ef545c0ea9d30afebeaeca683cf7bf7373acbe5325efb291273629887216e1c7d1c38598b10dc02828a5aec7cfe7f5b6f2fc0ff7cb8de207229ae7f1a9598872d95e44e7ce59d6e7fac61120d8de3f03071ed3269c7f4512321c71be4fe487a51c34dd0aa1d45ac175afc6d445c83765156bd85c8f51d5e65cdf8f29003a5ee9d205868982c7",
            "b1eef15449c33d848bb32bf043bc960f7b483a5bf7c39053a9364deb7388d557",
            "7590e8604e58cc0f073cec4df30785d818167d4bfe75b856af4742c991ef54be53873f8e610a76ad65b779a6365fd8caa37f4f4ee11cb3869be2a8b21a45b080ef85a66a78e41b34fce534aac78792d5f971f81ae21b444980d9eb9b369f2cb4b9a7411caa05ca8e9dad9c716fa9cb71cc11d579b9e197182156bdbb453baa99be5922e00e7c92e0a827e4922ecec95f552ff22c6a769b171d4ed34dce659c851a561ff189e6a9f0665f92a8c3966e019cf45518025fa53906ff1b80b9e172b755d9c975cac168f0d1b827f374ab503dddbaa28d1dfe7670340615a1767f89d93d48d438a6e8f83ab92f5f7ae3c6390e66b68f1e40efc5f89d16574deebece66291cb20a4d24da3cf559174341d713c2d1616addf50e07716d24630661bbc4ab2ef864650716f3aa22abb624a1bc37f6cc168e26bcc47dab8bb1213d7bfdc8bbbed23cc3691c408cd6380325dfc0690681edc3aa64f071fed1c39eef8e125edd32c30cc91d464f41ae52842b15c0565c253850f49115fb9b14ab0e6a72209bb2",
            true,
            TestName = "UnverifiableG Verify - 3072 - 256 - #1")]
        [TestCase(
            "a51237d8bc33f9c403ae9eb1b4195c0b0a0f7ea034a0d3f2cf4373f00ccaf4d90855f7a3541330e89a36defe905a92af7e9b107d778baed22fe4cd4870395f52381e49e80a9a83cd47231448cf07bde1f34047fd954be0f8560260fefd743f656bc32b4b236a5d6af40cc8d72cde36c806bd26a175a7bca9495c6392e2f1d90bcaea253a986e18fad27e7fca5fdc48d6c90b8635f1203d1a83f15e3fe79f25e476c774282e7b4b4e031ec798809c9bbf0ac8b724a610fb436d237dc267b0f0940bb07302ba816f09a1f5fb4264efbb42d6957bdaf4312cf66b478d7cbcb97442b46feebba4ec9e2c955e8b81ec5189ce8f0efdf827bf9f905803efb86be6d0cf95a1dfe4c0bf3a4fa8d23aadac807a66068820f03da9f324681ad5c651db7e54049050960ff77bf6f6b2e607fc96ea2c0627eff60db95234e6d133b7b85e8f213889c76e8a4ce5ce0bd4cf8cf10cf694d768141905a0873cc788766ee725352877660c7551316ad4629a92b3000b7e7de9a43dae7603dfd7b6f422ea5a2e2d4d",
            "f6c07e978284bd181e87537aca2c1ba6fb480776062988cf093b982bbf12548b",
            "70abe044f811635c6b79ce52205014550604f10e50831aee833b42dae51017a057a2a8434f0be988ddd88ab560d3deb2085d05f23df6ad7047171bfcbf5d6a401cb987f0a746fb80c90917efed9060fd3b1076184dbb239c6d95c56bf0a415e97698419b7e352e1418010014fa6cf0ebb6a6019dfa3b385f9ec903a7d5edd0d9253fbecb1e850e825c2902bc8fc665676a05312859b7816b7e51e297f51d75bbd569c0a677697644a65b7ba7ca7f13159ba8e0c77b539711e13c93a5bd5e0d9b1824cf3671fd48f316adbcbfb98dbad2c1207d837489b6ab8cd6ca785cf1cf15fabc7bc9b6e68a04613574e96d5661333cc6a836049fd168596b9972fd300ae939ee33399cbccb6d522ea5c4c6d7716e8cda934545b2921b3bac343b6f8c8f141956d9b8faf7475615c5d38cd9efc10fec817b78e196d3d98c3a0b0f5e8106419fb2ed31901f68ff527b18485c9cad4a04f0d942b732395ea95ac4e719470bcdb3d8d206568235930b20328dcf3dc47845af8a6d0a1387a5d641ff872925e8ea",
            false,
            TestName = "UnverifiableG Verify - 3072 - 256 - #2")]
        [TestCase(
            "e9f6b37577954fa64cb0c1c7d56895df5c8426a8a74a52fed25f1823f65ec5371123106dd05999420ae99e7f417f1d1ebd548c5e6f3e354d587a43309038b07a32708c66b4317b40f8c73b677b67d466cc671b5b4af51931149962e17b16df2126bd345a175c21d5976d422bf1fbe8d015fa9ded1d7ad44ef83ac67f9ec9e6554748eae8e7e637c7aa23d54fe955d6f09b83040b29767894d78620bf07eb602c95e3f125325972cc4bf61ff9a220afed28ebc427b7bdb421dbc3102da0177a7ad1051f07cf716df820692820255363182acdc248b8244677bda5faf350e02f52a7469a3ef7a4d34aeae533ecb5757d186148bf7d4708e2bd53c722316a3e0333a5f09d7ae1ff61b44c15386d22ab59ee77af4ac6cdcb865f4b9787cae1f38099c3330290026efdecf2067894ebb75b0ed5b501f9f5d2a2eb97496c8d97e5d3c3b5ca6bba0c3db544d1f368c7851e0e0bf76922dc445e8c23244c8c1289237b70ff97d79b22965f528c555160f8d4e0bd4e60600bdd81cf5f81b4cdf222414b87",
            "99854f5e6cc8ece55405fe3965751ed81be9dc72433b87897324f56a1bc2eb03",
            "0aa485725e02bccc55c564cca889c49d37132db102d112052ddb5698bc6b7f56e68c26157116bf9c320693b23132d872e88a293c6092bd319a6cd6d8084216a7cabb2347ac7cc1b4ce085bfa4b969c13d7f2057fc0667f23eb14530d283d5cb55b555d92a4396f74950392611c371e16152fbfb3616a6e4cf9a6a0f9ab360da9448127b9535873f123addc5c1f7b81e3deeb1a9ce09903fd3db621ebda6cf539b936522af83d22e079458217c6e2abea612a106c5dc0862ef65fd7ac3f699350b20c7dc86f97acacc99fefc812cf92f9b073bb038b47923c826cad8d0a6fb5591a703ee15c1c395f36f4e81d2dda4bfa57d747476df15d6769d85327401f7dee885c955a835f7abd31cc3a480ec2fca63d6a0e22adf4d76bbd51ef25a854dd6f3ecb77a379679140f9fbd8dec6b67019104aba78c6218b6c35ced18f7f0afb8edf74f3f92922d4189c6617398ca9eb7e4376a5f2b035c433213a013b5712d3f32d59ee3ec89a75e8312adce96d3cb21ba34c8849715ac0329f792e66490fb250",
            true,
            TestName = "UnverifiableG Verify - 3072 - 256 - #3")]
        #endregion Verify Tests
        public void ShouldVerifyUnverifiableGeneratorsProperly(string pHex, string qHex, string gHex, bool success)
        {
            var p = new BitString(pHex).ToPositiveBigInteger();
            var q = new BitString(qHex).ToPositiveBigInteger();
            var g = new BitString(gHex).ToPositiveBigInteger();

            var subject = new UnverifiableGeneratorGeneratorValidator();

            var result = subject.Validate(p, q, g);

            Assert.AreEqual(success, result.Success, result.ErrorMessage);
        }
    }
}
